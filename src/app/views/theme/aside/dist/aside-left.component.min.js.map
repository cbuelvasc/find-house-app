{"version":3,"sources":["aside-left.component.ts"],"names":["core_1","require","operators_1","router_1","objectPath","AsideLeftComponent","htmlClassService","menuAsideService","layoutConfigService","router","render","cdr","this","asideLogo","asideClasses","currentRouteUrl","menuCanvasOptions","baseClass","overlay","closeBy","toggleBy","target","state","menuOptions","submenu","desktop","default","tablet","mobile","accordion","expandAll","prototype","ngAfterViewInit","ngOnInit","_this","url","split","events","pipe","filter","event","NavigationEnd","subscribe","mobileMenuClose","markForCheck","config","getConfig","get","setAttribute","asideMenu","nativeElement","getClasses","toString","getAsideLogo","setTimeout","offcanvas","KTOffcanvas","asideMenuOffcanvas","result","isMenuItemIsActive","item","isMenuRootItemIsActive","page","indexOf","_i","_a","length","subItem","mouseEnter","e","document","body","classList","contains","outsideTm","clearTimeout","insideTm","KTUtil","isInResponsiveRange","removeClass","addClass","mouseLeave","getItemCssClasses","classes","customClass","getItemAttrSubmenuToggle","toggle","isBreakpointDown","hide","__decorate","ViewChild","static","Component","selector","templateUrl","styleUrls","changeDetection","ChangeDetectionStrategy","OnPush","exports"],"mappings":"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","file":"aside-left.component.min.js","sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { filter } from 'rxjs/operators';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport * as objectPath from 'object-path';\r\n\r\nimport { LayoutConfigService, MenuAsideService, MenuOptions, OffcanvasOptions } from '../../../core/_base/layout';\r\nimport { HtmlClassService } from '../html-class.service';\r\n\r\n@Component({\r\n  selector: 'app-aside-left',\r\n  templateUrl: './aside-left.component.html',\r\n  styleUrls: ['./aside-left.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AsideLeftComponent implements OnInit, AfterViewInit {\r\n  private offcanvas: any;\r\n\r\n  @ViewChild('asideMenuOffcanvas', { static: true }) asideMenuOffcanvas: ElementRef;\r\n  @ViewChild('asideMenu', { static: true }) asideMenu: ElementRef;\r\n\r\n  asideLogo = '';\r\n  asideClasses = '';\r\n  currentRouteUrl = '';\r\n  insideTm: any;\r\n  outsideTm: any;\r\n\r\n  menuCanvasOptions: OffcanvasOptions = {\r\n    baseClass: 'aside',\r\n    overlay: true,\r\n    closeBy: 'kt_aside_close_btn',\r\n    toggleBy: {\r\n      target: 'kt_aside_mobile_toggle',\r\n      state: 'mobile-toggle-active'\r\n    }\r\n  };\r\n\r\n  menuOptions: MenuOptions = {\r\n    submenu: {\r\n      desktop: {\r\n        default: 'dropdown',\r\n      },\r\n      tablet: 'accordion',\r\n      mobile: 'accordion'\r\n    },\r\n    accordion: {\r\n      expandAll: false\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    public htmlClassService: HtmlClassService,\r\n    public menuAsideService: MenuAsideService,\r\n    public layoutConfigService: LayoutConfigService,\r\n    private router: Router,\r\n    private render: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentRouteUrl = this.router.url.split(/[?#]/)[0];\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(event => {\r\n        this.currentRouteUrl = this.router.url.split(/[?#]/)[0];\r\n        this.mobileMenuClose();\r\n        this.cdr.markForCheck();\r\n      });\r\n    const config = this.layoutConfigService.getConfig();\r\n\r\n    if (objectPath.get(config, 'aside.menu.dropdown')) {\r\n      this.render.setAttribute(this.asideMenu.nativeElement, 'data-ktmenu-dropdown', '1');\r\n      // tslint:disable-next-line:max-line-length\r\n      this.render.setAttribute(this.asideMenu.nativeElement, 'data-ktmenu-dropdown-timeout', objectPath.get(config, 'aside.menu.submenu.dropdown.hover-timeout'));\r\n    }\r\n    this.asideClasses = this.htmlClassService.getClasses('aside', true).toString();\r\n    this.asideLogo = this.getAsideLogo();\r\n    setTimeout(() => {\r\n      this.offcanvas = new KTOffcanvas(this.asideMenuOffcanvas.nativeElement, this.menuCanvasOptions);\r\n    });\r\n  }\r\n\r\n  getAsideLogo() {\r\n    let result = 'logo-light.png';\r\n    const brandSelfTheme = this.layoutConfigService.getConfig('brand.self.theme') || '';\r\n    if (brandSelfTheme === 'light') {\r\n      result = 'logo-dark.png';\r\n    }\r\n    return `./assets/media/logos/${result}`;\r\n  }\r\n\r\n  isMenuItemIsActive(item): boolean {\r\n    if (item.submenu) {\r\n      return this.isMenuRootItemIsActive(item);\r\n    }\r\n\r\n    if (!item.page) {\r\n      return false;\r\n    }\r\n    return this.currentRouteUrl.indexOf(item.page) !== -1;\r\n  }\r\n\r\n  isMenuRootItemIsActive(item): boolean {\r\n    let result = false;\r\n    for (const subItem of item.submenu) {\r\n      result = this.isMenuItemIsActive(subItem);\r\n      if (result) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  mouseEnter(e: Event) {\r\n    if (document.body.classList.contains('aside-fixed')) {\r\n      if (this.outsideTm) {\r\n        clearTimeout(this.outsideTm);\r\n        this.outsideTm = null;\r\n      }\r\n\r\n      this.insideTm = setTimeout(() => {\r\n        if (document.body.classList.contains('aside-minimize') && KTUtil.isInResponsiveRange('desktop')) {\r\n          this.render.removeClass(document.body, 'aside-minimize');\r\n          this.render.addClass(document.body, 'aside-minimize-hover');\r\n        }\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  mouseLeave(e: Event) {\r\n    if (document.body.classList.contains('aside-fixed')) {\r\n      if (this.insideTm) {\r\n        clearTimeout(this.insideTm);\r\n        this.insideTm = null;\r\n      }\r\n\r\n      this.outsideTm = setTimeout(() => {\r\n        // if the left aside menu is expand\r\n        if (document.body.classList.contains('aside-minimize-hover') && KTUtil.isInResponsiveRange('desktop')) {\r\n          // hide back the left aside menu\r\n          this.render.removeClass(document.body, 'aside-minimize-hover');\r\n          this.render.addClass(document.body, 'aside-minimize');\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  getItemCssClasses(item) {\r\n    let classes = 'menu-item';\r\n\r\n    if (objectPath.get(item, 'submenu')) {\r\n      classes += ' menu-item-submenu';\r\n    }\r\n\r\n    if (!item.submenu && this.isMenuItemIsActive(item)) {\r\n      classes += ' menu-item-active menu-item-here';\r\n    }\r\n\r\n    if (item.submenu && this.isMenuItemIsActive(item)) {\r\n      classes += ' menu-item-open menu-item-here';\r\n    }\r\n\r\n    // custom class for menu item\r\n    const customClass = objectPath.get(item, 'custom-class');\r\n    if (customClass) {\r\n      classes += ' ' + customClass;\r\n    }\r\n\r\n    if (objectPath.get(item, 'icon-only')) {\r\n      classes += ' menu-item-icon-only';\r\n    }\r\n\r\n    return classes;\r\n  }\r\n\r\n  getItemAttrSubmenuToggle(item) {\r\n    let toggle = 'hover';\r\n    if (objectPath.get(item, 'toggle') === 'click') {\r\n      toggle = 'click';\r\n    } else if (objectPath.get(item, 'submenu.type') === 'tabs') {\r\n      toggle = 'tabs';\r\n    } else {\r\n      // submenu toggle default to 'hover'\r\n    }\r\n\r\n    return toggle;\r\n  }\r\n\r\n\r\n  mobileMenuClose() {\r\n    if (KTUtil.isBreakpointDown('lg') && this.offcanvas) {\r\n      this.offcanvas.hide();\r\n    }\r\n  }\r\n}\r\n"]}