{"version":3,"sources":["change-password.component.ts"],"names":["core_1","require","forms_1","rxjs_1","auth_1","crud_1","PasswordValidation","MatchPassword","AC","get","value","setErrors","exports","ChangePasswordComponent","fb","auth","store","layoutUtilsService","this","loadingSubject","BehaviorSubject","hasFormErrors","prototype","ngOnInit","loadData","_this","getUserById","userId","subscribe","res","user","createForm","changePasswordForm","group","password","Validators","required","confirmPassword","reset","next","markAsPristine","markAsUntouched","updateValueAndValidity","onSubmit","controls","invalid","Object","keys","forEach","controlName","markAsTouched","updatedUser","id","changes","dispatch","UserUpdated","partialUser","showActionNotification","MessageType","Update","onAlertClose","$event","__decorate","Input","Component","selector","templateUrl"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBACAC,QAAAD,QAAA,kBAGAE,OAAAF,QAAA,QAKAG,OAAAH,QAAA,gCAIAI,OAAAJ,QAAA,qCAEAK,mBAAA,WAAA,SAAAA,KAWA,OATQA,EAAAC,cAAP,SAAqBC,GAGpB,GAFiBA,EAAGC,IAAI,YAAYC,QACZF,EAAGC,IAAI,mBAAmBC,MAIjD,OAAO,KAFPF,EAAGC,IAAI,mBAAmBE,UAAU,CAAEJ,eAAe,KAKxDD,EAXA,GAAaM,QAAAN,mBAAAA,mBAkBb,IAAAO,wBAAA,WAQC,SAAAA,EAAoBC,EAAyBC,EAA2BC,EAE/DC,GAFWC,KAAAJ,GAAAA,EAAyBI,KAAAH,KAAAA,EAA2BG,KAAAF,MAAAA,EAE/DE,KAAAD,mBAAAA,EAPAC,KAAAC,eAAiB,IAAIhB,OAAAiB,iBAAyB,GACvDF,KAAAG,eAAgB,EA4EjB,OAnECR,EAAAS,UAAAC,SAAA,WACCL,KAAKM,YAGNX,EAAAS,UAAAE,SAAA,WAAA,IAAAC,EAAAP,KACCA,KAAKH,KAAKW,YAAYR,KAAKS,QAAQC,UAAU,SAAAC,GAC5CJ,EAAKK,KAAOD,EACZJ,EAAKM,gBAIPlB,EAAAS,UAAAS,WAAA,WACCb,KAAKc,mBAAqBd,KAAKJ,GAAGmB,MAAM,CACvCC,SAAU,CAAC,GAAIhC,QAAAiC,WAAWC,UAC1BC,gBAAiB,CAAC,GAAInC,QAAAiC,WAAWC,aAInCvB,EAAAS,UAAAgB,MAAA,WACCpB,KAAKG,eAAgB,EACrBH,KAAKC,eAAeoB,MAAK,GACzBrB,KAAKc,mBAAmBQ,iBACxBtB,KAAKc,mBAAmBS,kBACxBvB,KAAKc,mBAAmBU,0BAGzB7B,EAAAS,UAAAqB,SAAA,WACCzB,KAAKC,eAAeoB,MAAK,GACzBrB,KAAKG,eAAgB,EACrB,IAAMuB,EAAW1B,KAAKc,mBAAmBY,SAEzC,GAAI1B,KAAKc,mBAAmBa,QAO3B,OANAC,OAAOC,KAAKH,GAAUI,QAAQ,SAAAC,GAC7B,OAAAL,EAASK,GAAaC,kBAEvBhC,KAAKG,eAAgB,OACrBH,KAAKC,eAAeoB,MAAK,GAK1BrB,KAAKY,KAAKI,SAAWU,EAASV,SAASxB,MACvC,IAAMyC,EAA4B,CACjCC,GAAIlC,KAAKY,KAAKsB,GACdC,QAASnC,KAAKY,MAGfZ,KAAKF,MAAMsC,SAAS,IAAIlD,OAAAmD,YAAY,CACnCC,YAAaL,EACbrB,KAAMZ,KAAKY,QAGZZ,KAAKM,WACLN,KAAKC,eAAeoB,MAAK,GAEzBrB,KAAKD,mBAAmBwC,uBADR,+CACwCpD,OAAAqD,YAAYC,OAAQ,KAAM,GAAM,GACxFzC,KAAKoB,SAQNzB,EAAAS,UAAAsC,aAAA,SAAaC,GACZ3C,KAAKG,eAAgB,GA5EbyC,WAAA,CAAR9D,OAAA+D,+BACQD,WAAA,CAAR9D,OAAA+D,uCAHWlD,EAAuBiD,WAAA,CALnC9D,OAAAgE,UAAU,CACVC,SAAU,qBACVC,YAAa,sCAGDrD,GAAb,GAAaD,QAAAC,wBAAAA","file":"change-password.component.min.js","sourcesContent":["// Angular\r\nimport { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { AbstractControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\n// RxJS\r\nimport { BehaviorSubject } from 'rxjs';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n// Auth\r\nimport { AuthService, UserUpdated, User } from '../../../../../../core/auth/';\r\n// State\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// Layout\r\nimport { LayoutUtilsService, MessageType } from '../../../../../../core/_base/crud';\r\n\r\nexport class PasswordValidation {\r\n\t\r\n\tstatic MatchPassword(AC: AbstractControl) {\r\n\t\tconst password = AC.get('password').value; // to get value in input tag\r\n\t\tconst confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tAC.get('confirmPassword').setErrors({ MatchPassword: true });\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@Component({\r\n\tselector: 'kt-change-password',\r\n\ttemplateUrl: './change-password.component.html',\r\n\t// changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\t// Public properties\r\n\t@Input() userId: string;\r\n\t@Input() loadingSubject = new BehaviorSubject<boolean>(false);\r\n\thasFormErrors = false;\r\n\tuser: User;\r\n\tchangePasswordForm: FormGroup;\r\n\r\n\tconstructor(private fb: FormBuilder, private auth: AuthService, private store: Store<AppState>,\r\n\t\t// tslint:disable-next-line:align\r\n\t\tprivate layoutUtilsService: LayoutUtilsService) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.loadData();\r\n\t}\r\n\r\n\tloadData() {\r\n\t\tthis.auth.getUserById(this.userId).subscribe(res => {\r\n\t\t\tthis.user = res;\r\n\t\t\tthis.createForm();\r\n\t\t});\r\n\t}\r\n\r\n\tcreateForm() {\r\n\t\tthis.changePasswordForm = this.fb.group({\r\n\t\t\tpassword: ['', Validators.required],\r\n\t\t\tconfirmPassword: ['', Validators.required]\r\n\t\t});\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.hasFormErrors = false;\r\n\t\tthis.loadingSubject.next(false);\r\n\t\tthis.changePasswordForm.markAsPristine();\r\n\t\tthis.changePasswordForm.markAsUntouched();\r\n\t\tthis.changePasswordForm.updateValueAndValidity();\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tthis.loadingSubject.next(true);\r\n\t\tthis.hasFormErrors = false;\r\n\t\tconst controls = this.changePasswordForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.changePasswordForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\t\t\tthis.hasFormErrors = true;\r\n\t\t\tthis.loadingSubject.next(false);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.user.password = controls.password.value;\r\n\t\tconst updatedUser: Update<User> = {\r\n\t\t\tid: this.user.id,\r\n\t\t\tchanges: this.user\r\n\t\t};\r\n\r\n\t\tthis.store.dispatch(new UserUpdated({\r\n\t\t\tpartialUser: updatedUser,\r\n\t\t\tuser: this.user\r\n\t\t}));\r\n\r\n\t\tthis.loadData();\r\n\t\tthis.loadingSubject.next(false);\r\n\t\tconst message = `User password successfully has been changed.`;\r\n\t\tthis.layoutUtilsService.showActionNotification(message, MessageType.Update, 5000, true, false);\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Close alert\r\n\t *\r\n\t * @param $event: Event\r\n\t */\r\n\tonAlertClose($event) {\r\n\t\tthis.hasFormErrors = false;\r\n\t}\r\n}\r\n"]}