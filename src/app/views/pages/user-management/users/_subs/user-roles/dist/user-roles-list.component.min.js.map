{"version":3,"sources":["user-roles-list.component.ts"],"names":["core_1","require","rxjs_1","store_1","lodash_1","auth_1","UserRolesListComponent","store","this","loadingSubject","BehaviorSubject","allRoles","unassignedRoles","assignedRoles","prototype","ngOnInit","_this","allUserRoles$","pipe","select","selectAllRoles","subscribe","res","each","_role","push","rolesSubject","value","roleId","role","find","id","remove","el","assignRole","roleIdForAdding","updateRoles","unassingRole","_roles","elem","next","__decorate","Input","Component","selector","templateUrl","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBAEAC,OAAAD,QAAA,QAEAE,QAAAF,QAAA,eAEAG,SAAAH,QAAA,UAIAI,OAAAJ,QAAA,+BAMAK,uBAAA,WAkBC,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAfXC,KAAAC,eAAiB,IAAIP,OAAAQ,iBAAyB,GAKvDF,KAAAG,SAAmB,GACnBH,KAAAI,gBAA0B,GAC1BJ,KAAAK,cAAwB,GA6EzB,OA5DCP,EAAAQ,UAAAC,SAAA,WAAA,IAAAC,EAAAR,KACCA,KAAKS,cAAgBT,KAAKD,MAAMW,KAAKf,QAAAgB,OAAOd,OAAAe,iBAC5CZ,KAAKS,cAAcI,UAAU,SAACC,GAC7BlB,SAAAmB,KAAKD,EAAK,SAACE,GACVR,EAAKL,SAASc,KAAKD,GACnBR,EAAKJ,gBAAgBa,KAAKD,KAG3BpB,SAAAmB,KAAKP,EAAKU,aAAaC,MAAO,SAACC,GAC9B,IAAMC,EAAOzB,SAAA0B,KAAKd,EAAKL,SAAU,SAACa,GACjC,OAAOA,EAAMO,KAAOH,IAGjBC,IACHb,EAAKH,cAAcY,KAAKI,GACxBzB,SAAA4B,OAAOhB,EAAKJ,gBAAiB,SAACqB,GAAO,OAAAA,EAAGF,KAAOF,EAAKE,WASxDzB,EAAAQ,UAAAoB,WAAA,WAAA,IAAAlB,EAAAR,KACC,IAAIA,KAAK2B,gBAAT,CAGA,IAAMN,EAAOzB,SAAA0B,KAAKtB,KAAKG,SAAU,SAACa,GACjC,OAAOA,EAAMO,KAAQf,EAAoB,kBAGtCa,IACHrB,KAAKK,cAAcY,KAAKI,GACxBzB,SAAA4B,OAAOxB,KAAKI,gBAAiB,SAACqB,GAAO,OAAAA,EAAGF,KAAOF,EAAKE,KACpDvB,KAAK2B,gBAAkB,GACvB3B,KAAK4B,iBASP9B,EAAAQ,UAAAuB,aAAA,SAAaR,GACZrB,KAAK2B,gBAAkB,GACvB3B,KAAKI,gBAAgBa,KAAKI,GAC1BzB,SAAA4B,OAAOxB,KAAKK,cAAe,SAAAoB,GAAM,OAAAA,EAAGF,KAAOF,EAAKE,KAChDvB,KAAK4B,eAMN9B,EAAAQ,UAAAsB,YAAA,WACC,IAAME,EAAS,GACflC,SAAAmB,KAAKf,KAAKK,cAAe,SAAA0B,GAAQ,OAAAD,EAAOb,KAAKc,EAAKR,MAClDvB,KAAKkB,aAAac,KAAKF,IAlFfG,WAAA,CAARzC,OAAA0C,uCACQD,WAAA,CAARzC,OAAA0C,qCAJWpC,EAAsBmC,WAAA,CAJlCzC,OAAA2C,UAAU,CACVC,SAAU,qBACVC,YAAa,sCAEDvC,GAAb,GAAawC,QAAAxC,uBAAAA","file":"user-roles-list.component.min.js","sourcesContent":["// Angular\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n// RxJS\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n// NGRX\r\nimport { Store, select } from '@ngrx/store';\r\n// Lodash\r\nimport { each, find, remove } from 'lodash';\r\n// State\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// Auth\r\nimport { Role, selectAllRoles } from '../../../../../../core/auth';\r\n\r\n@Component({\r\n\tselector: 'kt-user-roles-list',\r\n\ttemplateUrl: './user-roles-list.component.html'\r\n})\r\nexport class UserRolesListComponent implements OnInit {\r\n\t// Public properties\r\n\t// Incoming data\r\n\t@Input() loadingSubject = new BehaviorSubject<boolean>(false);\r\n\t@Input() rolesSubject: BehaviorSubject<string[]>;\r\n\r\n\t// Roles\r\n\tallUserRoles$: Observable<Role[]>;\r\n\tallRoles: Role[] = [];\r\n\tunassignedRoles: Role[] = [];\r\n\tassignedRoles: Role[] = [];\r\n\troleIdForAdding: string;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param store: Store<AppState>\r\n\t */\r\n\tconstructor(private store: Store<AppState>) {}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.allUserRoles$ = this.store.pipe(select(selectAllRoles));\r\n\t\tthis.allUserRoles$.subscribe((res: Role[]) => {\r\n\t\t\teach(res, (_role: Role) => {\r\n\t\t\t\tthis.allRoles.push(_role);\r\n\t\t\t\tthis.unassignedRoles.push(_role);\r\n\t\t\t});\r\n\r\n\t\t\teach(this.rolesSubject.value, (roleId: string) => {\r\n\t\t\t\tconst role = find(this.allRoles, (_role: Role) => {\r\n\t\t\t\t\treturn _role.id === roleId;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (role) {\r\n\t\t\t\t\tthis.assignedRoles.push(role);\r\n\t\t\t\t\tremove(this.unassignedRoles, (el) => el.id === role.id);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Assign role\r\n\t */\r\n\tassignRole() {\r\n\t\tif (this.roleIdForAdding) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst role = find(this.allRoles, (_role: Role) => {\r\n\t\t\treturn _role.id === (this.roleIdForAdding);\r\n\t\t});\r\n\r\n\t\tif (role) {\r\n\t\t\tthis.assignedRoles.push(role);\r\n\t\t\tremove(this.unassignedRoles, (el) => el.id === role.id);\r\n\t\t\tthis.roleIdForAdding = '';\r\n\t\t\tthis.updateRoles();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unassign role\r\n\t *\r\n\t * @param role: Role\r\n\t */\r\n\tunassingRole(role: Role) {\r\n\t\tthis.roleIdForAdding = '';\r\n\t\tthis.unassignedRoles.push(role);\r\n\t\tremove(this.assignedRoles, el => el.id === role.id);\r\n\t\tthis.updateRoles();\r\n\t}\r\n\r\n\t/**\r\n\t * Update roles\r\n\t */\r\n\tupdateRoles() {\r\n\t\tconst _roles = [];\r\n\t\teach(this.assignedRoles, elem => _roles.push(elem.id));\r\n\t\tthis.rolesSubject.next(_roles);\r\n\t}\r\n}\r\n"]}