{"version":3,"sources":["products-list.component.ts"],"names":["core_1","require","paginator_1","collections_1","operators_1","rxjs_1","store_1","crud_1","e_commerce_1","ProductsListComponent","dialog","activatedRoute","router","subheaderService","layoutUtilsService","store","this","displayedColumns","filterStatus","filterCondition","selection","SelectionModel","productsResult","subscriptions","prototype","ngOnInit","_this","sortSubscription","sort","sortChange","subscribe","paginator","pageIndex","push","paginatorSubscriptions","merge","page","pipe","tap","loadProductsList","searchSubscription","fromEvent","searchInput","nativeElement","debounceTime","distinctUntilChanged","setTitle","dataSource","ProductsDataSource","entitiesSubscription","entitySubject","skip","res","lastQuerySubscription","select","selectProductsPageLastQuery","lastQuery","routeSubscription","queryParams","params","id","restoreState","of","undefined","delay","ngOnDestroy","forEach","el","unsubscribe","clear","QueryParamsModel","filterConfiguration","direction","active","pageSize","dispatch","ProductsPageRequested","filter","searchText","value","length","status","condition","model","manufacture","color","VINCode","toString","deleteProduct","_item","deleteElement","afterClosed","OneProductDeleted","showActionNotification","MessageType","Delete","deleteProducts","idsForDeletion","i","selected","ManyProductsDeleted","ids","fetchProducts","messages","elem","text","modelYear","fetchElements","updateStatusForProducts","_messages","statusTitle","getItemStatusString","statusCssClass","getItemCssClassByStatus","updateStatusForEntities","ProductsStatusUpdated","products","Update","editProduct","navigate","relativeTo","createProduct","navigateByUrl","isAllSelected","masterToggle","row","getItemConditionString","getItemCssClassByCondition","__decorate","ViewChild","MatPaginator","static","Component","selector","templateUrl","changeDetection","ChangeDetectionStrategy","OnPush","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBAGAC,YAAAD,QAAA,+BAGAE,cAAAF,QAAA,4BAEAG,YAAAH,QAAA,kBACAI,OAAAJ,QAAA,QAEAK,QAAAL,QAAA,eAKAM,OAAAN,QAAA,qCAEAO,aAAAP,QAAA,qCAuBAQ,sBAAA,WA0BC,SAAAA,EAAmBC,EACVC,EACAC,EACAC,EACAC,EACAC,GALUC,KAAAN,OAAAA,EACVM,KAAAL,eAAAA,EACAK,KAAAJ,OAAAA,EACAI,KAAAH,iBAAAA,EACAG,KAAAF,mBAAAA,EACAE,KAAAD,MAAAA,EA5BTC,KAAAC,iBAAmB,CAAC,SAAU,UAAW,cAAe,QAAS,YAAa,QAAS,QAAS,YAAa,SAAU,WAKvHD,KAAAE,aAAe,GACfF,KAAAG,gBAAkB,GAGlBH,KAAAI,UAAY,IAAIjB,cAAAkB,gBAA6B,EAAM,IACnDL,KAAAM,eAAiC,GACzBN,KAAAO,cAAgC,GA6VzC,OAnUCd,EAAAe,UAAAC,SAAA,WAAA,IAAAC,EAAAV,KAEOW,EAAmBX,KAAKY,KAAKC,WAAWC,UAAU,WAAM,OAACJ,EAAKK,UAAUC,UAAY,IAC1FhB,KAAKO,cAAcU,KAAKN,GAMxB,IAAMO,EAAyB7B,OAAA8B,MAAMnB,KAAKY,KAAKC,WAAYb,KAAKe,UAAUK,MAAMC,KAC/EjC,YAAAkC,IAAI,WAAM,OAAAZ,EAAKa,sBAEdT,YACFd,KAAKO,cAAcU,KAAKC,GAGxB,IAAMM,EAAqBnC,OAAAoC,UAAUzB,KAAK0B,YAAYC,cAAe,SAASN,KAC7EjC,YAAAwC,aAAa,KACbxC,YAAAyC,uBACAzC,YAAAkC,IAAI,WACHZ,EAAKK,UAAUC,UAAY,EAC3BN,EAAKa,sBAGLT,YACFd,KAAKO,cAAcU,KAAKO,GAGxBxB,KAAKH,iBAAiBiC,SAAS,YAG/B9B,KAAK+B,WAAa,IAAIvC,aAAAwC,mBAAmBhC,KAAKD,OAC9C,IAAMkC,EAAuBjC,KAAK+B,WAAWG,cAAcb,KAC1DjC,YAAA+C,KAAK,GACL/C,YAAAyC,wBACCf,UAAU,SAAAsB,GACX1B,EAAKJ,eAAiB8B,IAEvBpC,KAAKO,cAAcU,KAAKgB,GACxB,IAAMI,EAAwBrC,KAAKD,MAAMsB,KAAK/B,QAAAgD,OAAO9C,aAAA+C,8BAA8BzB,UAAU,SAAAsB,GAAO,OAAA1B,EAAK8B,UAAYJ,IAErHpC,KAAKO,cAAcU,KAAKoB,GAGxB,IAAMI,EAAoBzC,KAAKL,eAAe+C,YAAY5B,UAAU,SAAA6B,GAC/DA,EAAOC,IACVlC,EAAKmC,aAAanC,EAAK8B,WAAYG,EAAOC,IAI3CvD,OAAAyD,QAAGC,GAAW1B,KAAKjC,YAAA4D,MAAM,MAAOlC,UAAU,WACzCJ,EAAKa,uBAGPvB,KAAKO,cAAcU,KAAKwB,IAMzBhD,EAAAe,UAAAyC,YAAA,WACCjD,KAAKO,cAAc2C,QAAQ,SAAAC,GAAM,OAAAA,EAAGC,iBAMrC3D,EAAAe,UAAAe,iBAAA,WACCvB,KAAKI,UAAUiD,QACf,IAAMX,EAAc,IAAInD,OAAA+D,iBACvBtD,KAAKuD,sBACLvD,KAAKY,KAAK4C,UACVxD,KAAKY,KAAK6C,OACVzD,KAAKe,UAAUC,UACfhB,KAAKe,UAAU2C,UAGhB1D,KAAKD,MAAM4D,SAAS,IAAInE,aAAAoE,sBAAsB,CAAExC,KAAMsB,KACtD1C,KAAKI,UAAUiD,SAMhB5D,EAAAe,UAAA+C,oBAAA,WACC,IAAMM,EAAc,GACdC,EAAqB9D,KAAK0B,YAAYC,cAAcoC,MAe1D,OAbI/D,KAAKE,cAA2C,EAA3BF,KAAKE,aAAa8D,SAC1CH,EAAOI,QAAUjE,KAAKE,cAGnBF,KAAKG,iBAAiD,EAA9BH,KAAKG,gBAAgB6D,SAChDH,EAAOK,WAAalE,KAAKG,iBAG1B0D,EAAOM,MAAQL,EAEfD,EAAOO,YAAcN,EACrBD,EAAOQ,MAAQP,EACfD,EAAOS,QAAUR,EACVD,GASRpE,EAAAe,UAAAqC,aAAA,SAAaH,EAA+BE,GAEtCF,EAAYmB,SAIb,cAAenB,EAAYmB,SAC9B7D,KAAKG,gBAAkBuC,EAAYmB,OAAOK,UAAUK,YAGjD,WAAY7B,EAAYmB,SAC3B7D,KAAKE,aAAewC,EAAYmB,OAAOI,OAAOM,YAG3C7B,EAAYmB,OAAOM,QACtBnE,KAAK0B,YAAYC,cAAcoC,MAAQrB,EAAYmB,OAAOM,SAU5D1E,EAAAe,UAAAgE,cAAA,SAAcC,GAAd,IAAA/D,EAAAV,KAMmBA,KAAKF,mBAAmB4E,cAL3B,iBACM,mDACG,0BAIdC,cAAc7D,UAAU,SAAAsB,GAC5BA,IAIL1B,EAAKX,MAAM4D,SAAS,IAAInE,aAAAoF,kBAAkB,CAAEhC,GAAI6B,EAAM7B,MACtDlC,EAAKZ,mBAAmB+E,uBATF,2BASyCtF,OAAAuF,YAAYC,YAO7EtF,EAAAe,UAAAwE,eAAA,WAAA,IAAAtE,EAAAV,KAMmBA,KAAKF,mBAAmB4E,cAL3B,kBACM,wDACG,4BAIdC,cAAc7D,UAAU,SAAAsB,GACjC,GAAKA,EAAL,CAMA,IAFA,IAAM6C,EAA2B,GAExBC,EAAI,EAAGA,EAAIxE,EAAKN,UAAU+E,SAASnB,OAAQkB,IACnDD,EAAehE,KAAKP,EAAKN,UAAU+E,SAASD,GAAGtC,IAEhDlC,EAAKX,MAAM4D,SAAS,IAAInE,aAAA4F,oBAAoB,CAAEC,IAAKJ,KACnDvE,EAAKZ,mBAAmB+E,uBAdF,sCAcyCtF,OAAAuF,YAAYC,QAC3ErE,EAAKN,UAAUiD,YAOjB5D,EAAAe,UAAA8E,cAAA,WAEC,IAAIC,EAAW,GACfvF,KAAKI,UAAU+E,SAASjC,QAAQ,SAAAsC,GAC/BD,EAAStE,KAAK,CACbwE,KAASD,EAAKpB,YAAW,IAAIoB,EAAKrB,MAAK,IAAIqB,EAAKE,UAChD9C,GAAI4C,EAAKlB,QACTL,OAAQuB,EAAKvB,WAGfjE,KAAKF,mBAAmB6F,cAAcJ,IAMvC9F,EAAAe,UAAAoF,wBAAA,WAAA,IAAAlF,EAAAV,KAIO6F,EAAY,GAElB7F,KAAKI,UAAU+E,SAASjC,QAAQ,SAAAsC,GAC/BK,EAAU5E,KAAK,CACdwE,KAASD,EAAKpB,YAAW,IAAIoB,EAAKrB,MAAK,IAAIqB,EAAKE,UAChD9C,GAAI4C,EAAKlB,QACTL,OAAQuB,EAAKvB,OACb6B,YAAapF,EAAKqF,oBAAoBP,EAAKvB,QAC3C+B,eAAgBtF,EAAKuF,wBAAwBT,EAAKvB,YAIlCjE,KAAKF,mBAAmBoG,wBAf3B,sCAEG,CAAC,CAAEnC,MAAO,EAAG0B,KAAM,WAAa,CAAE1B,MAAO,EAAG0B,KAAM,SAaiBI,GAC3ElB,cAAc7D,UAAU,SAAAsB,GAC5BA,IAKL1B,EAAKX,MAAM4D,SAAS,IAAInE,aAAA2G,sBAAsB,CAC7ClC,QAAS7B,EACTgE,SAAU1F,EAAKN,UAAU+E,YAG1BzE,EAAKZ,mBAAmB+E,uBA1BF,gDA0ByCtF,OAAAuF,YAAYuB,SAC3E3F,EAAKN,UAAUiD,WASjB5D,EAAAe,UAAA8F,YAAA,SAAY1D,GACX5C,KAAKJ,OAAO2G,SAAS,CAAC,mBAAoB3D,GAAK,CAAE4D,WAAYxG,KAAKL,kBAGnEF,EAAAe,UAAAiG,cAAA,WACCzG,KAAKJ,OAAO8G,cAAc,4BAM3BjH,EAAAe,UAAAmG,cAAA,WAGC,OAFoB3G,KAAKI,UAAU+E,SAASnB,SAC5BhE,KAAKM,eAAe0D,QAOrCvE,EAAAe,UAAAoG,aAAA,WAAA,IAAAlG,EAAAV,KACKA,KAAK2G,gBACR3G,KAAKI,UAAUiD,QAEfrD,KAAKM,eAAe4C,QAAQ,SAAA2D,GAAO,OAAAnG,EAAKN,UAAUkC,OAAOuE,MAU3DpH,EAAAe,UAAAuF,oBAAA,SAAoB9B,GACnB,YADmB,IAAAA,IAAAA,EAAA,GACXA,GACP,KAAK,EACJ,MAAO,UACR,KAAK,EACJ,MAAO,OAET,MAAO,IAQRxE,EAAAe,UAAAyF,wBAAA,SAAwBhC,GACvB,YADuB,IAAAA,IAAAA,EAAA,GACfA,GACP,KAAK,EACJ,MAAO,UACR,KAAK,EACJ,MAAO,QAET,MAAO,IAQRxE,EAAAe,UAAAsG,uBAAA,SAAuB5C,GACtB,YADsB,IAAAA,IAAAA,EAAA,GACdA,GACP,KAAK,EACJ,MAAO,MACR,KAAK,EACJ,MAAO,OAET,MAAO,IAQRzE,EAAAe,UAAAuG,2BAAA,SAA2B7C,GAC1B,YAD0B,IAAAA,IAAAA,EAAA,GAClBA,GACP,KAAK,EACJ,MAAO,SACR,KAAK,EACJ,MAAO,UAET,MAAO,IArWmC8C,WAAA,CAA1ChI,OAAAiI,UAAU/H,YAAAgI,aAAc,CAAEC,QAAQ,8BACGH,WAAA,CAArChI,OAAAiI,UAAU,QAAS,CAAEE,QAAQ,yBAEcH,WAAA,CAA3ChI,OAAAiI,UAAU,cAAe,CAAEE,QAAQ,gCAPxB1H,EAAqBuH,WAAA,CANjChI,OAAAoI,UAAU,CAEVC,SAAU,mBACVC,YAAa,iCACbC,gBAAiBvI,OAAAwI,wBAAwBC,UAE7BhI,GAAb,GAAaiI,QAAAjI,sBAAAA","file":"products-list.component.min.js","sourcesContent":["// Angular\r\nimport { Component, OnInit, ElementRef, ViewChild, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// Material\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n// RXJS\r\nimport { debounceTime, distinctUntilChanged, tap, skip, delay } from 'rxjs/operators';\r\nimport { fromEvent, merge, Observable, of, Subscription } from 'rxjs';\r\n// NGRX\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../../../../../../core/reducers';\r\n// UI\r\nimport { SubheaderService } from '../../../../../../core/_base/layout';\r\n// CRUD\r\nimport { LayoutUtilsService, MessageType, QueryParamsModel } from '../../../../../../core/_base/crud';\r\n// Services and Models\r\nimport {\r\n\tProductModel,\r\n\tProductsDataSource,\r\n\tProductsPageRequested,\r\n\tOneProductDeleted,\r\n\tManyProductsDeleted,\r\n\tProductsStatusUpdated,\r\n\tselectProductsPageLastQuery\r\n} from '../../../../../../core/e-commerce';\r\n\r\n// Table with EDIT item in new page\r\n// ARTICLE for table with sort/filter/paginator\r\n// https://blog.angular-university.io/angular-material-data-table/\r\n// https://v5.material.angular.io/components/table/overview\r\n// https://v5.material.angular.io/components/sort/overview\r\n// https://v5.material.angular.io/components/table/overview#sorting\r\n// https://www.youtube.com/watch?v=NSt9CI3BXv4\r\n@Component({\r\n\t// tslint:disable-next-line:component-selector\r\n\tselector: 'kt-products-list',\r\n\ttemplateUrl: './products-list.component.html',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProductsListComponent implements OnInit, OnDestroy {\r\n\t// Table fields\r\n\tdataSource: ProductsDataSource;\r\n\tdisplayedColumns = ['select', 'VINCode', 'manufacture', 'model', 'modelYear', 'color', 'price', 'condition', 'status', 'actions'];\r\n\t@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\t@ViewChild('sort1', { static: true }) sort: MatSort;\r\n\t// Filter fields\r\n\t@ViewChild('searchInput', { static: true }) searchInput: ElementRef;\r\n\tfilterStatus = '';\r\n\tfilterCondition = '';\r\n\tlastQuery: QueryParamsModel;\r\n\t// Selection\r\n\tselection = new SelectionModel<ProductModel>(true, []);\r\n\tproductsResult: ProductModel[] = [];\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param dialog: MatDialog\r\n\t * @param activatedRoute: ActivatedRoute\r\n\t * @param router: Router\r\n\t * @param subheaderService: SubheaderService\r\n\t * @param layoutUtilsService: LayoutUtilsService\r\n\t * @param store: Store<AppState>\r\n\t */\r\n\tconstructor(public dialog: MatDialog,\r\n\t\tprivate activatedRoute: ActivatedRoute,\r\n\t\tprivate router: Router,\r\n\t\tprivate subheaderService: SubheaderService,\r\n\t\tprivate layoutUtilsService: LayoutUtilsService,\r\n\t\tprivate store: Store<AppState>) { }\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\t// If the user changes the sort order, reset back to the first page.\r\n\t\tconst sortSubscription = this.sort.sortChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n\t\tthis.subscriptions.push(sortSubscription);\r\n\r\n\t\t/* Data load will be triggered in two cases:\r\n\t\t- when a pagination event occurs => this.paginator.page\r\n\t\t- when a sort event occurs => this.sort.sortChange\r\n\t\t**/\r\n\t\tconst paginatorSubscriptions = merge(this.sort.sortChange, this.paginator.page).pipe(\r\n\t\t\ttap(() => this.loadProductsList())\r\n\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis.subscriptions.push(paginatorSubscriptions);\r\n\r\n\t\t// Filtration, bind to searchInput\r\n\t\tconst searchSubscription = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(\r\n\t\t\tdebounceTime(150),\r\n\t\t\tdistinctUntilChanged(),\r\n\t\t\ttap(() => {\r\n\t\t\t\tthis.paginator.pageIndex = 0;\r\n\t\t\t\tthis.loadProductsList();\r\n\t\t\t})\r\n\t\t)\r\n\t\t\t.subscribe();\r\n\t\tthis.subscriptions.push(searchSubscription);\r\n\r\n\t\t// Set title to page breadCrumbs\r\n\t\tthis.subheaderService.setTitle('Products');\r\n\r\n\t\t// Init DataSource\r\n\t\tthis.dataSource = new ProductsDataSource(this.store);\r\n\t\tconst entitiesSubscription = this.dataSource.entitySubject.pipe(\r\n\t\t\tskip(1),\r\n\t\t\tdistinctUntilChanged()\r\n\t\t).subscribe(res => {\r\n\t\t\tthis.productsResult = res;\r\n\t\t});\r\n\t\tthis.subscriptions.push(entitiesSubscription);\r\n\t\tconst lastQuerySubscription = this.store.pipe(select(selectProductsPageLastQuery)).subscribe(res => this.lastQuery = res);\r\n\t\t// Load last query from store\r\n\t\tthis.subscriptions.push(lastQuerySubscription);\r\n\r\n\t\t// Read from URL itemId, for restore previous state\r\n\t\tconst routeSubscription = this.activatedRoute.queryParams.subscribe(params => {\r\n\t\t\tif (params.id) {\r\n\t\t\t\tthis.restoreState(this.lastQuery, +params.id);\r\n\t\t\t}\r\n\r\n\t\t\t// First load\r\n\t\t\tof(undefined).pipe(delay(1000)).subscribe(() => { // Remove this line, just loading imitation\r\n\t\t\t\tthis.loadProductsList();\r\n\t\t\t}); // Remove this line, just loading imitation\r\n\t\t});\r\n\t\tthis.subscriptions.push(routeSubscription);\r\n\t}\r\n\r\n\t/**\r\n\t * On Destroy\r\n\t */\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.forEach(el => el.unsubscribe());\r\n\t}\r\n\r\n\t/**\r\n\t * Load Products List\r\n\t */\r\n\tloadProductsList() {\r\n\t\tthis.selection.clear();\r\n\t\tconst queryParams = new QueryParamsModel(\r\n\t\t\tthis.filterConfiguration(),\r\n\t\t\tthis.sort.direction,\r\n\t\t\tthis.sort.active,\r\n\t\t\tthis.paginator.pageIndex,\r\n\t\t\tthis.paginator.pageSize\r\n\t\t);\r\n\t\t// Call request from server\r\n\t\tthis.store.dispatch(new ProductsPageRequested({ page: queryParams }));\r\n\t\tthis.selection.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns object for filter\r\n\t */\r\n\tfilterConfiguration(): any {\r\n\t\tconst filter: any = {};\r\n\t\tconst searchText: string = this.searchInput.nativeElement.value;\r\n\r\n\t\tif (this.filterStatus && this.filterStatus.length > 0) {\r\n\t\t\tfilter.status = +this.filterStatus;\r\n\t\t}\r\n\r\n\t\tif (this.filterCondition && this.filterCondition.length > 0) {\r\n\t\t\tfilter.condition = +this.filterCondition;\r\n\t\t}\r\n\r\n\t\tfilter.model = searchText;\r\n\r\n\t\tfilter.manufacture = searchText;\r\n\t\tfilter.color = searchText;\r\n\t\tfilter.VINCode = searchText;\r\n\t\treturn filter;\r\n\t}\r\n\r\n\t/**\r\n\t * Restore state\r\n\t *\r\n\t * @param queryParams: QueryParamsModel\r\n\t * @param id: number\r\n\t */\r\n\trestoreState(queryParams: QueryParamsModel, id: number) {\r\n\r\n\t\tif (!queryParams.filter) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ('condition' in queryParams.filter) {\r\n\t\t\tthis.filterCondition = queryParams.filter.condition.toString();\r\n\t\t}\r\n\r\n\t\tif ('status' in queryParams.filter) {\r\n\t\t\tthis.filterStatus = queryParams.filter.status.toString();\r\n\t\t}\r\n\r\n\t\tif (queryParams.filter.model) {\r\n\t\t\tthis.searchInput.nativeElement.value = queryParams.filter.model;\r\n\t\t}\r\n\t}\r\n\r\n\t/** ACTIONS */\r\n\t/**\r\n\t * Delete product\r\n\t *\r\n\t * @param _item: ProductModel\r\n\t */\r\n\tdeleteProduct(_item: ProductModel) {\r\n\t\tconst _title = 'Product Delete';\r\n\t\tconst _description = 'Are you sure to permanently delete this product?';\r\n\t\tconst _waitDesciption = 'Product is deleting...';\r\n\t\tconst _deleteMessage = `Product has been deleted`;\r\n\r\n\t\tconst dialogRef = this.layoutUtilsService.deleteElement(_title, _description, _waitDesciption);\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.store.dispatch(new OneProductDeleted({ id: _item.id }));\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_deleteMessage, MessageType.Delete);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Delete products\r\n\t */\r\n\tdeleteProducts() {\r\n\t\tconst _title = 'Products Delete';\r\n\t\tconst _description = 'Are you sure to permanently delete selected products?';\r\n\t\tconst _waitDesciption = 'Products are deleting...';\r\n\t\tconst _deleteMessage = 'Selected products have been deleted';\r\n\r\n\t\tconst dialogRef = this.layoutUtilsService.deleteElement(_title, _description, _waitDesciption);\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst idsForDeletion: string[] = [];\r\n\t\t\t// tslint:disable-next-line:prefer-for-of\r\n\t\t\tfor (let i = 0; i < this.selection.selected.length; i++) {\r\n\t\t\t\tidsForDeletion.push(this.selection.selected[i].id);\r\n\t\t\t}\r\n\t\t\tthis.store.dispatch(new ManyProductsDeleted({ ids: idsForDeletion }));\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_deleteMessage, MessageType.Delete);\r\n\t\t\tthis.selection.clear();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch selected products\r\n\t */\r\n\tfetchProducts() {\r\n\t\t// tslint:disable-next-line:prefer-const\r\n\t\tlet messages = [];\r\n\t\tthis.selection.selected.forEach(elem => {\r\n\t\t\tmessages.push({\r\n\t\t\t\ttext: `${elem.manufacture} ${elem.model} ${elem.modelYear}`,\r\n\t\t\t\tid: elem.VINCode,\r\n\t\t\t\tstatus: elem.status\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.layoutUtilsService.fetchElements(messages);\r\n\t}\r\n\r\n\t/**\r\n\t * Update status dialog\r\n\t */\r\n\tupdateStatusForProducts() {\r\n\t\tconst _title = 'Update status for selected products';\r\n\t\tconst _updateMessage = 'Status has been updated for selected products';\r\n\t\tconst _statuses = [{ value: 0, text: 'Selling' }, { value: 1, text: 'Sold' }];\r\n\t\tconst _messages = [];\r\n\r\n\t\tthis.selection.selected.forEach(elem => {\r\n\t\t\t_messages.push({\r\n\t\t\t\ttext: `${elem.manufacture} ${elem.model} ${elem.modelYear}`,\r\n\t\t\t\tid: elem.VINCode,\r\n\t\t\t\tstatus: elem.status,\r\n\t\t\t\tstatusTitle: this.getItemStatusString(elem.status),\r\n\t\t\t\tstatusCssClass: this.getItemCssClassByStatus(elem.status)\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst dialogRef = this.layoutUtilsService.updateStatusForEntities(_title, _statuses, _messages);\r\n\t\tdialogRef.afterClosed().subscribe(res => {\r\n\t\t\tif (!res) {\r\n\t\t\t\tthis.selection.clear();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.store.dispatch(new ProductsStatusUpdated({\r\n\t\t\t\tstatus: +res,\r\n\t\t\t\tproducts: this.selection.selected\r\n\t\t\t}));\r\n\r\n\t\t\tthis.layoutUtilsService.showActionNotification(_updateMessage, MessageType.Update);\r\n\t\t\tthis.selection.clear();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Redirect to edit page\r\n\t *\r\n\t * @param id: any\r\n\t */\r\n\teditProduct(id) {\r\n\t\tthis.router.navigate(['../products/edit', id], { relativeTo: this.activatedRoute });\r\n\t}\r\n\r\n\tcreateProduct() {\r\n\t\tthis.router.navigateByUrl('/ecommerce/products/add');\r\n\t}\r\n\r\n\t/**\r\n\t * Check all rows are selected\r\n\t */\r\n\tisAllSelected() {\r\n\t\tconst numSelected = this.selection.selected.length;\r\n\t\tconst numRows = this.productsResult.length;\r\n\t\treturn numSelected === numRows;\r\n\t}\r\n\r\n\t/**\r\n\t * Selects all rows if they are not all selected; otherwise clear selection\r\n\t */\r\n\tmasterToggle() {\r\n\t\tif (this.isAllSelected()) {\r\n\t\t\tthis.selection.clear();\r\n\t\t} else {\r\n\t\t\tthis.productsResult.forEach(row => this.selection.select(row));\r\n\t\t}\r\n\t}\r\n\r\n\t/* UI */\r\n\t/**\r\n\t * Returns status string\r\n\t *\r\n\t * @param status: number\r\n\t */\r\n\tgetItemStatusString(status: number = 0): string {\r\n\t\tswitch (status) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn 'Selling';\r\n\t\t\tcase 1:\r\n\t\t\t\treturn 'Sold';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns CSS Class by status\r\n\t *\r\n\t * @param status: number\r\n\t */\r\n\tgetItemCssClassByStatus(status: number = 0): string {\r\n\t\tswitch (status) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn 'success';\r\n\t\t\tcase 1:\r\n\t\t\t\treturn 'metal';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Rerurns condition string\r\n\t *\r\n\t * @param condition: number\r\n\t */\r\n\tgetItemConditionString(condition: number = 0): string {\r\n\t\tswitch (condition) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn 'New';\r\n\t\t\tcase 1:\r\n\t\t\t\treturn 'Used';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Returns CSS Class by condition\r\n\t *\r\n\t * @param condition: number\r\n\t */\r\n\tgetItemCssClassByCondition(condition: number = 0): string {\r\n\t\tswitch (condition) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn 'danger';\r\n\t\t\tcase 1:\r\n\t\t\t\treturn 'primary';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n}\r\n"]}