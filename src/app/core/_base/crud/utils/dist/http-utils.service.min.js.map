{"version":3,"sources":["http-utils.service.ts"],"names":["core_1","require","http_1","http_extentsions_model_1","HttpUtilsService","prototype","getFindHTTPParams","queryParams","HttpParams","set","filter","sortOrder","sortField","pageNumber","toString","pageSize","getHTTPHeaders","result","HttpHeaders","baseFilter","entities","filtrationFields","HttpExtenstionsModel","sortArray","incomingArray","searchInArray","queryObj","__decorate","Injectable","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,wBAIAE,yBAAAF,QAAA,4CAGAG,iBAAA,WAAA,SAAAA,KA+BA,OA7BEA,EAAAC,UAAAC,kBAAA,SAAkBC,GAChB,OAAO,IAAIL,OAAAM,YACRC,IAAI,iBAAkBF,EAAYG,QAClCD,IAAI,YAAaF,EAAYI,WAC7BF,IAAI,YAAaF,EAAYK,WAC7BH,IAAI,aAAcF,EAAYM,WAAWC,YACzCL,IAAI,WAAYF,EAAYQ,SAASD,aAG1CV,EAAAC,UAAAW,eAAA,WACE,IAAIC,EAAS,IAAIf,OAAAgB,YAEjB,OADAD,EAASA,EAAOR,IAAI,eAAgB,qBAItCL,EAAAC,UAAAc,WAAA,SAAWC,EAAiBb,EAA+Bc,GAEzD,YAFyD,IAAAA,IAAAA,EAAA,KACnC,IAAIlB,yBAAAmB,sBACLH,WAAWC,EAAUb,EAAac,IAGzDjB,EAAAC,UAAAkB,UAAA,SAAUC,EAAsBZ,EAAwBD,GAEtD,YAF8B,IAAAC,IAAAA,EAAA,SAAwB,IAAAD,IAAAA,EAAA,QAChC,IAAIR,yBAAAmB,sBACLC,UAAUC,EAAeZ,EAAWD,IAG3DP,EAAAC,UAAAoB,cAAA,SAAcD,EAAsBE,EAAeL,GAEjD,YAFiD,IAAAA,IAAAA,EAAA,KAC3B,IAAIlB,yBAAAmB,sBACLG,cAAcD,EAAeE,EAAUL,IA7BnDjB,EAAgBuB,WAAA,CAD5B3B,OAAA4B,cACYxB,GAAb,GAAayB,QAAAzB,iBAAAA","file":"http-utils.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { QueryResultsModel } from '../models/query-models/query-results.model';\r\nimport { QueryParamsModel } from '../models/query-models/query-params.model';\r\nimport { HttpExtenstionsModel } from '../../crud/models/http-extentsions-model';\r\n\r\n@Injectable()\r\nexport class HttpUtilsService {\r\n\r\n  getFindHTTPParams(queryParams: QueryParamsModel): HttpParams {\r\n    return new HttpParams()\r\n      .set('lastNamefilter', queryParams.filter)\r\n      .set('sortOrder', queryParams.sortOrder)\r\n      .set('sortField', queryParams.sortField)\r\n      .set('pageNumber', queryParams.pageNumber.toString())\r\n      .set('pageSize', queryParams.pageSize.toString());\r\n  }\r\n\r\n  getHTTPHeaders(): HttpHeaders {\r\n    let result = new HttpHeaders();\r\n    result = result.set('Content-Type', 'application/json');\r\n    return result;\r\n  }\r\n\r\n  baseFilter(entities: any[], queryParams: QueryParamsModel, filtrationFields: string[] = []): QueryResultsModel {\r\n    const httpExtension = new HttpExtenstionsModel();\r\n    return httpExtension.baseFilter(entities, queryParams, filtrationFields);\r\n  }\r\n\r\n  sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\r\n    const httpExtension = new HttpExtenstionsModel();\r\n    return httpExtension.sortArray(incomingArray, sortField, sortOrder);\r\n  }\r\n\r\n  searchInArray(incomingArray: any[], queryObj: any, filtrationFields: string[] = []): any[] {\r\n    const httpExtension = new HttpExtenstionsModel();\r\n    return httpExtension.searchInArray(incomingArray, queryObj, filtrationFields);\r\n  }\r\n}\r\n"]}