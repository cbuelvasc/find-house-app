{"version":3,"sources":["http-utils.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,6CAA+D;AAI/D,mFAAgF;AAGhF;IAAA;IA+BA,CAAC;IA7BC,4CAAiB,GAAjB,UAAkB,WAA6B;QAC7C,OAAO,IAAI,iBAAU,EAAE;aACpB,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,MAAM,CAAC;aACzC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC;aACvC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,SAAS,CAAC;aACvC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;aACpD,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,yCAAc,GAAd;QACE,IAAI,MAAM,GAAG,IAAI,kBAAW,EAAE,CAAC;QAC/B,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,qCAAU,GAAV,UAAW,QAAe,EAAE,WAA6B,EAAE,gBAA+B;QAA/B,iCAAA,EAAA,qBAA+B;QACxF,IAAM,aAAa,GAAG,IAAI,6CAAoB,EAAE,CAAC;QACjD,OAAO,aAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAC3E,CAAC;IAED,oCAAS,GAAT,UAAU,aAAoB,EAAE,SAAsB,EAAE,SAAyB;QAAjD,0BAAA,EAAA,cAAsB;QAAE,0BAAA,EAAA,iBAAyB;QAC/E,IAAM,aAAa,GAAG,IAAI,6CAAoB,EAAE,CAAC;QACjD,OAAO,aAAa,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IAED,wCAAa,GAAb,UAAc,aAAoB,EAAE,QAAa,EAAE,gBAA+B;QAA/B,iCAAA,EAAA,qBAA+B;QAChF,IAAM,aAAa,GAAG,IAAI,6CAAoB,EAAE,CAAC;QACjD,OAAO,aAAa,CAAC,aAAa,CAAC,aAAa,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IAChF,CAAC;IA9BU,gBAAgB;QAD5B,iBAAU,EAAE;OACA,gBAAgB,CA+B5B;IAAD,uBAAC;CA/BD,AA+BC,IAAA;AA/BY,4CAAgB","file":"http-utils.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { QueryResultsModel } from '../models/query-models/query-results.model';\r\nimport { QueryParamsModel } from '../models/query-models/query-params.model';\r\nimport { HttpExtenstionsModel } from '../../crud/models/http-extentsions-model';\r\n\r\n@Injectable()\r\nexport class HttpUtilsService {\r\n\r\n  getFindHTTPParams(queryParams: QueryParamsModel): HttpParams {\r\n    return new HttpParams()\r\n      .set('lastNamefilter', queryParams.filter)\r\n      .set('sortOrder', queryParams.sortOrder)\r\n      .set('sortField', queryParams.sortField)\r\n      .set('pageNumber', queryParams.pageNumber.toString())\r\n      .set('pageSize', queryParams.pageSize.toString());\r\n  }\r\n\r\n  getHTTPHeaders(): HttpHeaders {\r\n    let result = new HttpHeaders();\r\n    result = result.set('Content-Type', 'application/json');\r\n    return result;\r\n  }\r\n\r\n  baseFilter(entities: any[], queryParams: QueryParamsModel, filtrationFields: string[] = []): QueryResultsModel {\r\n    const httpExtension = new HttpExtenstionsModel();\r\n    return httpExtension.baseFilter(entities, queryParams, filtrationFields);\r\n  }\r\n\r\n  sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\r\n    const httpExtension = new HttpExtenstionsModel();\r\n    return httpExtension.sortArray(incomingArray, sortField, sortOrder);\r\n  }\r\n\r\n  searchInArray(incomingArray: any[], queryObj: any, filtrationFields: string[] = []): any[] {\r\n    const httpExtension = new HttpExtenstionsModel();\r\n    return httpExtension.searchInArray(incomingArray, queryObj, filtrationFields);\r\n  }\r\n}\r\n"]}