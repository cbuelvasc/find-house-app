{"version":3,"sources":["intercept.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,6CAA0G;AAE1G,4CAAqC;AAGrC;IAAA;IAiCA,CAAC;IA/BC,oCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QACpD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE;gBACV,aAAa,EAAE,YAAU,YAAY,CAAC,OAAO,CAAC,aAAa,CAAG;aAC/D;SACF,CAAC,CAAC;QACH,kCAAkC;QAClC,wBAAwB;QACxB,wCAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,eAAG,CACD,UAAA,KAAK;YACH,IAAI,KAAK,YAAY,mBAAY,EAAE;gBACjC,iCAAiC;gBACjC,4BAA4B;gBAC5B,6BAA6B;aAC9B;QACH,CAAC,EACD,UAAA,KAAK;YACH,4BAA4B;YAC5B,mCAAmC;YACnC,iCAAiC;YACjC,uCAAuC;YACvC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,yCAAyC;QAC3C,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAhCU,gBAAgB;QAD5B,iBAAU,EAAE;OACA,gBAAgB,CAiC5B;IAAD,uBAAC;CAjCD,AAiCC,IAAA;AAjCY,4CAAgB","file":"intercept.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InterceptService implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\r\n      }\r\n    });\r\n    // console.log('----request----');\r\n    // console.log(request);\r\n    // console.log('--- end of request---');\r\n\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        event => {\r\n          if (event instanceof HttpResponse) {\r\n            // console.log('all looks good');\r\n            // http response status code\r\n            // console.log(event.status);\r\n          }\r\n        },\r\n        error => {\r\n          // http response status code\r\n          // console.log('----response----');\r\n          // console.error('status code:');\r\n          // tslint:disable-next-line:no-debugger\r\n          console.error(error.status);\r\n          console.error(error.message);\r\n          // console.log('--- end of response---');\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n"]}