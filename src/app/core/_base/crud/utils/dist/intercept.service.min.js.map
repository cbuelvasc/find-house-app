{"version":3,"sources":["intercept.service.ts"],"names":["core_1","require","http_1","operators_1","InterceptService","prototype","intercept","request","next","clone","setHeaders","Authorization","localStorage","getItem","handle","pipe","tap","event","HttpResponse","error","console","status","message","__decorate","Injectable","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,wBAEAE,YAAAF,QAAA,kBAGAG,iBAAA,WAAA,SAAAA,KAiCA,OA/BEA,EAAAC,UAAAC,UAAA,SAAUC,EAA2BC,GAUnC,OATAD,EAAUA,EAAQE,MAAM,CACtBC,WAAY,CACVC,cAAe,UAAUC,aAAaC,QAAQ,kBAO3CL,EAAKM,OAAOP,GAASQ,KAC1BZ,YAAAa,IACE,SAAAC,GACuBf,OAAAgB,cAMvB,SAAAC,GAKEC,QAAQD,MAAMA,EAAME,QACpBD,QAAQD,MAAMA,EAAMG,aA3BjBlB,EAAgBmB,WAAA,CAD5BvB,OAAAwB,cACYpB,GAAb,GAAaqB,QAAArB,iBAAAA","file":"intercept.service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InterceptService implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`\r\n      }\r\n    });\r\n    // console.log('----request----');\r\n    // console.log(request);\r\n    // console.log('--- end of request---');\r\n\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        event => {\r\n          if (event instanceof HttpResponse) {\r\n            // console.log('all looks good');\r\n            // http response status code\r\n            // console.log(event.status);\r\n          }\r\n        },\r\n        error => {\r\n          // http response status code\r\n          // console.log('----response----');\r\n          // console.error('status code:');\r\n          // tslint:disable-next-line:no-debugger\r\n          console.error(error.status);\r\n          console.error(error.message);\r\n          // console.log('--- end of response---');\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n"]}