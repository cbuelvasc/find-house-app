{"version":3,"sources":["layout-utils.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAI3C,gEAKiD;AAEjD,IAAY,WAKX;AALD,WAAY,WAAW;IACrB,iDAAM,CAAA;IACN,6CAAI,CAAA;IACJ,iDAAM,CAAA;IACN,iDAAM,CAAA;AACR,CAAC,EALW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAKtB;AAGD;IAEE,4BAAoB,QAAqB,EAAU,MAAiB;QAAhD,aAAQ,GAAR,QAAQ,CAAa;QAAU,WAAM,GAAN,MAAM,CAAW;IACpE,CAAC;IAED,mDAAsB,GAAtB,UACE,OAAe,EACf,IAAsC,EACtC,QAAwB,EACxB,eAA+B,EAC/B,cAA8B,EAC9B,kBAAiC,EACjC,gBAA6C;QAL7C,qBAAA,EAAA,OAAoB,WAAW,CAAC,MAAM;QACtC,yBAAA,EAAA,gBAAwB;QACxB,gCAAA,EAAA,sBAA+B;QAC/B,+BAAA,EAAA,qBAA8B;QAC9B,mCAAA,EAAA,yBAAiC;QACjC,iCAAA,EAAA,2BAA6C;QAE7C,IAAM,IAAI,GAAG;YACX,OAAO,SAAA;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,eAAe,iBAAA;YACf,cAAc,gBAAA;YACd,kBAAkB,oBAAA;YAClB,gBAAgB,kBAAA;YAChB,IAAI,MAAA;YACJ,MAAM,EAAE,MAAM;SACf,CAAC;QACF,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,kCAA2B,EAAE;YAClE,QAAQ,UAAA;YACR,IAAI,MAAA;YACJ,gBAAgB,kBAAA;SACjB,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,KAAkB,EAAE,WAAwB,EAAE,eAA4B;QAA1E,sBAAA,EAAA,UAAkB;QAAE,4BAAA,EAAA,gBAAwB;QAAE,gCAAA,EAAA,oBAA4B;QACtF,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kCAA2B,EAAE;YACnD,IAAI,EAAE,EAAE,KAAK,OAAA,EAAE,WAAW,aAAA,EAAE,eAAe,iBAAA,EAAE;YAC7C,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,IAAS;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAA0B,EAAE;YAClD,IAAI,MAAA;YACJ,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,oDAAuB,GAAvB,UAAwB,KAAK,EAAE,QAAQ,EAAE,QAAQ;QAC/C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kCAA2B,EAAE;YACnD,IAAI,EAAE,EAAE,KAAK,OAAA,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAE;YACnC,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAlDU,kBAAkB;QAD9B,iBAAU,EAAE;OACA,kBAAkB,CAmD9B;IAAD,yBAAC;CAnDD,AAmDC,IAAA;AAnDY,gDAAkB","file":"layout-utils.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport {\r\n  ActionNotificationComponent,\r\n  DeleteEntityDialogComponent,\r\n  FetchEntityDialogComponent,\r\n  UpdateStatusDialogComponent\r\n} from '../../../../views/partials/content/crud';\r\n\r\nexport enum MessageType {\r\n  Create,\r\n  Read,\r\n  Update,\r\n  Delete\r\n}\r\n\r\n@Injectable()\r\nexport class LayoutUtilsService {\r\n\r\n  constructor(private snackBar: MatSnackBar, private dialog: MatDialog) {\r\n  }\r\n\r\n  showActionNotification(\r\n    message: string,\r\n    type: MessageType = MessageType.Create,\r\n    duration: number = 10000,\r\n    showCloseButton: boolean = true,\r\n    showUndoButton: boolean = true,\r\n    undoButtonDuration: number = 3000,\r\n    verticalPosition: 'top' | 'bottom' = 'bottom'\r\n  ) {\r\n    const data = {\r\n      message,\r\n      snackBar: this.snackBar,\r\n      showCloseButton,\r\n      showUndoButton,\r\n      undoButtonDuration,\r\n      verticalPosition,\r\n      type,\r\n      action: 'Undo'\r\n    };\r\n    return this.snackBar.openFromComponent(ActionNotificationComponent, {\r\n      duration,\r\n      data,\r\n      verticalPosition\r\n    });\r\n  }\r\n\r\n  deleteElement(title: string = '', description: string = '', waitDescription: string = '') {\r\n    return this.dialog.open(DeleteEntityDialogComponent, {\r\n      data: { title, description, waitDescription },\r\n      width: '440px'\r\n    });\r\n  }\r\n\r\n  fetchElements(data: any) {\r\n    return this.dialog.open(FetchEntityDialogComponent, {\r\n      data,\r\n      width: '600px'\r\n    });\r\n  }\r\n\r\n  updateStatusForEntities(title, statuses, messages) {\r\n    return this.dialog.open(UpdateStatusDialogComponent, {\r\n      data: { title, statuses, messages },\r\n      width: '600px'\r\n    });\r\n  }\r\n}\r\n"]}