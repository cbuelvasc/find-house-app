{"version":3,"sources":["http-extentsions-model.ts"],"names":[],"mappings":"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","file":"http-extentsions-model.js","sourcesContent":["import { QueryParamsModel } from './query-models/query-params.model';\r\nimport { QueryResultsModel } from './query-models/query-results.model';\r\n\r\nexport class HttpExtenstionsModel {\r\n\r\n  baseFilter(entities: any[], queryParams: QueryParamsModel, filtrationFields: string[] = []): QueryResultsModel {\r\n    let entitiesResult = this.searchInArray(entities, queryParams.filter, filtrationFields);\r\n\r\n    if (queryParams.sortField) {\r\n      entitiesResult = this.sortArray(entitiesResult, queryParams.sortField, queryParams.sortOrder);\r\n    }\r\n\r\n    const totalCount = entitiesResult.length;\r\n    const initialPos = queryParams.pageNumber * queryParams.pageSize;\r\n    entitiesResult = entitiesResult.slice(initialPos, initialPos + queryParams.pageSize);\r\n\r\n    const queryResults = new QueryResultsModel();\r\n    queryResults.items = entitiesResult;\r\n    queryResults.totalCount = totalCount;\r\n    return queryResults;\r\n  }\r\n\r\n  sortArray(incomingArray: any[], sortField: string = '', sortOrder: string = 'asc'): any[] {\r\n    if (!sortField) {\r\n      return incomingArray;\r\n    }\r\n\r\n    let result: any[] = [];\r\n    result = incomingArray.sort((a, b) => {\r\n      if (a[sortField] < b[sortField]) {\r\n        return sortOrder === 'asc' ? -1 : 1;\r\n      }\r\n\r\n      if (a[sortField] > b[sortField]) {\r\n        return sortOrder === 'asc' ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  searchInArray(incomingArray: any[], queryObj: any, filtrationFields: string[] = []): any[] {\r\n    const result: any[] = [];\r\n    let resultBuffer: any[] = [];\r\n    const indexes: number[] = [];\r\n    let firstIndexes: number[] = [];\r\n    let doSearch = false;\r\n\r\n    filtrationFields.forEach(item => {\r\n      if (item in queryObj) {\r\n        incomingArray.forEach((element, index) => {\r\n          if (element[item] === queryObj[item]) {\r\n            firstIndexes.push(index);\r\n          }\r\n        });\r\n        firstIndexes.forEach(element => {\r\n          resultBuffer.push(incomingArray[element]);\r\n        });\r\n        incomingArray = resultBuffer.slice(0);\r\n        resultBuffer = [].slice(0);\r\n        firstIndexes = [].slice(0);\r\n      }\r\n    });\r\n\r\n    Object.keys(queryObj).forEach(key => {\r\n      const searchText = queryObj[key].toString().trim().toLowerCase();\r\n      if (key && !filtrationFields.some(e => e === key) && searchText) {\r\n        doSearch = true;\r\n        try {\r\n          incomingArray.forEach((element, index) => {\r\n            if (element[key]) {\r\n              const val = element[key].toString().trim().toLowerCase();\r\n              if (val.indexOf(searchText) > -1 && indexes.indexOf(index) === -1) {\r\n                indexes.push(index);\r\n              }\r\n            }\r\n          });\r\n        } catch (ex) {\r\n          console.log(ex, key, searchText);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (!doSearch) {\r\n      return incomingArray;\r\n    }\r\n\r\n    indexes.forEach(re => {\r\n      result.push(incomingArray[re]);\r\n    });\r\n\r\n    return result;\r\n  }\r\n}\r\n"]}