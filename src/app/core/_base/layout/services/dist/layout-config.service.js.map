{"version":3,"sources":["layout-config.service.ts"],"names":[],"mappings":"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","file":"layout-config.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport * as objectPath from 'object-path';\r\nimport { merge } from 'lodash';\r\n\r\nimport { LayoutConfigModel } from '../models/layout-config.model';\r\n\r\nconst localStorageKey = 'layoutConfig';\r\n\r\n@Injectable()\r\nexport class LayoutConfigService {\r\n\r\n  onConfigUpdated$: Subject<LayoutConfigModel>;\r\n  layoutConfig: LayoutConfigModel;\r\n\r\n  constructor() {\r\n    this.onConfigUpdated$ = new Subject();\r\n  }\r\n\r\n  saveConfig(layoutConfig: LayoutConfigModel): void {\r\n    if (layoutConfig) {\r\n      localStorage.setItem(localStorageKey, JSON.stringify(layoutConfig));\r\n    }\r\n  }\r\n\r\n  getSavedConfig(): LayoutConfigModel {\r\n    const config = localStorage.getItem(localStorageKey);\r\n    try {\r\n      return JSON.parse(config);\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  resetConfig(): void {\r\n    localStorage.removeItem('layoutConfig');\r\n  }\r\n\r\n  getConfig(path?: string): LayoutConfigModel | any {\r\n    this.layoutConfig = this.getSavedConfig();\r\n    if (path) {\r\n      return objectPath.get(this.layoutConfig, path);\r\n    }\r\n    return this.layoutConfig;\r\n  }\r\n\r\n  setConfig(value: any, save?: boolean): void {\r\n    this.layoutConfig = merge(this.layoutConfig, value);\r\n    if (save) {\r\n      this.saveConfig(this.layoutConfig);\r\n    }\r\n    this.onConfigUpdated$.next(this.layoutConfig);\r\n  }\r\n\r\n  getLogo(): string {\r\n    const menuAsideLeftSkin = objectPath.get(this.layoutConfig, 'brand.self.theme');\r\n    // set brand logo\r\n    const logoObject = objectPath.get(this.layoutConfig, 'self.logo');\r\n\r\n    let logo;\r\n    if (typeof logoObject === 'string') {\r\n      logo = logoObject;\r\n    }\r\n    if (typeof logoObject === 'object') {\r\n      logo = objectPath.get(logoObject, menuAsideLeftSkin + '');\r\n    }\r\n    if (typeof logo === 'undefined') {\r\n      try {\r\n        const logos = objectPath.get(this.layoutConfig, 'self.logo');\r\n        logo = logos[Object.keys(logos)[0]];\r\n      } catch (e) {\r\n      }\r\n    }\r\n    return logo;\r\n  }\r\n\r\n  getStickyLogo(): string {\r\n    let logo = objectPath.get(this.layoutConfig, 'self.logo.sticky');\r\n    if (typeof logo === 'undefined') {\r\n      logo = this.getLogo();\r\n    }\r\n    return logo + '';\r\n  }\r\n\r\n  loadConfigs(config: LayoutConfigModel) {\r\n    this.layoutConfig = this.getSavedConfig();\r\n    if (!this.layoutConfig || objectPath.get(this.layoutConfig, 'demo') !== config.demo) {\r\n      this.layoutConfig = config;\r\n    }\r\n    this.saveConfig(this.layoutConfig);\r\n  }\r\n\r\n  reloadConfigs(): LayoutConfigModel {\r\n    this.layoutConfig = this.getSavedConfig();\r\n    this.onConfigUpdated$.next(this.layoutConfig);\r\n    return this.layoutConfig;\r\n  }\r\n}\r\n"]}