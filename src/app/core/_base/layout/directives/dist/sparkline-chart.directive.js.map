{"version":3,"sources":["sparkline-chart.directive.ts"],"names":[],"mappings":"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","file":"sparkline-chart.directive.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\nimport { Chart } from 'chart.js/dist/Chart.min.js';\r\n\r\nimport { LayoutConfigService } from '../../layout/services/layout-config.service';\r\n\r\nexport interface SparklineChartOptions {\r\n  data: number[];\r\n  color: string;\r\n  border: number;\r\n  fill?: boolean;\r\n  tooltip?: boolean;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appSparklineChart]',\r\n  exportAs: 'appSparklineChart'\r\n})\r\nexport class SparklineChartDirective implements AfterViewInit {\r\n\r\n  @Input() options: SparklineChartOptions;\r\n\r\n  private chart: Chart;\r\n\r\n  constructor(private el: ElementRef, private layoutConfigService: LayoutConfigService) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initChart(this.el.nativeElement,\r\n      this.options.data,\r\n      this.options.color,\r\n      this.options.border,\r\n      this.options.fill,\r\n      this.options.tooltip);\r\n  }\r\n\r\n  initChart(src, data, color, border, fill, tooltip) {\r\n    if (src.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // set default values\r\n    fill = (typeof fill !== 'undefined') ? fill : false;\r\n    tooltip = (typeof tooltip !== 'undefined') ? tooltip : false;\r\n\r\n    const config = {\r\n      type: 'line',\r\n      data: {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October'],\r\n        datasets: [{\r\n          label: '',\r\n          borderColor: color,\r\n          borderWidth: border,\r\n\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 12,\r\n          pointBackgroundColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n          pointBorderColor: Chart.helpers.color('#000000').alpha(0).rgbString(),\r\n          pointHoverBackgroundColor: this.layoutConfigService.getConfig('colors.state.danger'),\r\n          pointHoverBorderColor: Chart.helpers.color('#000000').alpha(0.1).rgbString(),\r\n          fill: false,\r\n          data,\r\n        }]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: false,\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n          intersect: false,\r\n          mode: 'nearest',\r\n          xPadding: 10,\r\n          yPadding: 10,\r\n          caretPadding: 10\r\n        },\r\n        legend: {\r\n          display: false,\r\n          labels: {\r\n            usePointStyle: false\r\n          }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        hover: {\r\n          mode: 'index'\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            display: false,\r\n            gridLines: false,\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Month'\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            display: false,\r\n            gridLines: false,\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: 'Value'\r\n            },\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }]\r\n        },\r\n\r\n        elements: {\r\n          point: {\r\n            radius: 4,\r\n            borderWidth: 12\r\n          },\r\n        },\r\n\r\n        layout: {\r\n          padding: {\r\n            left: 0,\r\n            right: 10,\r\n            top: 5,\r\n            bottom: 0\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    this.chart = new Chart(src, config);\r\n  }\r\n\r\n  getChart() {\r\n    return this.chart;\r\n  }\r\n}\r\n"]}