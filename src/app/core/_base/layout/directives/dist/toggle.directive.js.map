{"version":3,"sources":["toggle.directive.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA4E;AAY5E;IAME,yBAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAClC,CAAC;IAED,yCAAe,GAAf;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClE,CAAC;IATQ;QAAR,YAAK,EAAE;4CAAwB;IAFrB,eAAe;QAJ3B,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,WAAW;SACtB,CAAC;OACW,eAAe,CAY3B;IAAD,sBAAC;CAZD,AAYC,IAAA;AAZY,0CAAe","file":"toggle.directive.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\nexport interface ToggleOptions {\r\n  target?: string | any;\r\n  targetState?: string;\r\n  toggleState?: string;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appToggle]',\r\n  exportAs: 'appToggle'\r\n})\r\nexport class ToggleDirective implements AfterViewInit {\r\n\r\n  @Input() options: ToggleOptions;\r\n\r\n  toggle: any;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.toggle = new KTToggle(this.el.nativeElement, this.options);\r\n  }\r\n}\r\n"]}