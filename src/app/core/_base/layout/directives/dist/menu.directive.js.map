{"version":3,"sources":["menu.directive.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA4E;AAC5E,wCAA0C;AAY1C;IAME,uBAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAClC,CAAC;IAED,uCAAe,GAAf;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9D,CAAC;IAED,+BAAO,GAAP;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEO,oCAAY,GAApB;QACE,IAAI,eAAe,GAAG,WAAW,CAAC;QAClC,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,oBAAoB,CAAC,KAAK,GAAG,EAAE;YACpE,eAAe,GAAG,UAAU,CAAC;SAC9B;QAED,IAAI,OAAO,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,KAAK,QAAQ,EAAE;YACvE,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,EAAE,eAAe,CAAC,CAAC;SAClE;IACH,CAAC;IAzBQ;QAAR,YAAK,EAAE;0CAAsB;IAFnB,aAAa;QAJzB,gBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,SAAS;SACpB,CAAC;OACW,aAAa,CA4BzB;IAAD,oBAAC;CA5BD,AA4BC,IAAA;AA5BY,sCAAa","file":"menu.directive.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\nimport * as objectPath from 'object-path';\r\n\r\nexport interface MenuOptions {\r\n  scroll?: any;\r\n  submenu?: any;\r\n  accordion?: any;\r\n  dropdown?: any;\r\n}\r\n@Directive({\r\n  selector: '[appMenu]',\r\n  exportAs: 'appMenu',\r\n})\r\nexport class MenuDirective implements AfterViewInit {\r\n\r\n  @Input() options: MenuOptions;\r\n\r\n  private menu: any;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setupOptions();\r\n    this.menu = new KTMenu(this.el.nativeElement, this.options);\r\n  }\r\n\r\n  getMenu() {\r\n    return this.menu;\r\n  }\r\n\r\n  private setupOptions() {\r\n    let menuDesktopMode = 'accordion';\r\n    if (this.el.nativeElement.getAttribute('data-menu-dropdown') === '1') {\r\n      menuDesktopMode = 'dropdown';\r\n    }\r\n\r\n    if (typeof objectPath.get(this.options, 'submenu.desktop') === 'object') {\r\n      objectPath.set(this.options, 'submenu.desktop', menuDesktopMode);\r\n    }\r\n  }\r\n}\r\n"]}