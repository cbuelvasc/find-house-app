{"version":3,"sources":["offcanvas.directive.ts"],"names":["core_1","require","OffcanvasDirective","el","this","prototype","ngAfterViewInit","_this","setTimeout","offcanvas","KTOffcanvas","nativeElement","options","getOffcanvas","__decorate","Input","Directive","selector","exportAs","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAcAC,mBAAA,WAME,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAYtB,OATED,EAAAG,UAAAC,gBAAA,WAAA,IAAAC,EAAAH,KACEI,WAAW,WACTD,EAAKE,UAAY,IAAIC,YAAYH,EAAKJ,GAAGQ,cAAeJ,EAAKK,YAIjEV,EAAAG,UAAAQ,aAAA,WACE,OAAOT,KAAKK,WAdLK,WAAA,CAARd,OAAAe,gCAFUb,EAAkBY,WAAA,CAJ9Bd,OAAAgB,UAAU,CACTC,SAAU,iBACVC,SAAU,kBAEChB,GAAb,GAAaiB,QAAAjB,mBAAAA","file":"offcanvas.directive.min.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\nexport interface OffcanvasOptions {\r\n  baseClass: string;\r\n  placement?: string;\r\n  overlay?: boolean;\r\n  closeBy: string;\r\n  toggleBy?: any;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appOffcanvas]',\r\n  exportAs: 'appOffcanvas',\r\n})\r\nexport class OffcanvasDirective implements AfterViewInit {\r\n\r\n  @Input() options: OffcanvasOptions;\r\n\r\n  private offcanvas: any;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.offcanvas = new KTOffcanvas(this.el.nativeElement, this.options);\r\n    });\r\n  }\r\n\r\n  getOffcanvas() {\r\n    return this.offcanvas;\r\n  }\r\n}\r\n"]}