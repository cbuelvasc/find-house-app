{"version":3,"sources":["offcanvas.directive.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA4E;AAc5E;IAME,4BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAClC,CAAC;IAED,4CAAe,GAAf;QAAA,iBAIC;QAHC,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAfQ;QAAR,YAAK,EAAE;+CAA2B;IAFxB,kBAAkB;QAJ9B,gBAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,cAAc;SACzB,CAAC;OACW,kBAAkB,CAkB9B;IAAD,yBAAC;CAlBD,AAkBC,IAAA;AAlBY,gDAAkB","file":"offcanvas.directive.js","sourcesContent":["import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\n\r\nexport interface OffcanvasOptions {\r\n  baseClass: string;\r\n  placement?: string;\r\n  overlay?: boolean;\r\n  closeBy: string;\r\n  toggleBy?: any;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appOffcanvas]',\r\n  exportAs: 'appOffcanvas',\r\n})\r\nexport class OffcanvasDirective implements AfterViewInit {\r\n\r\n  @Input() options: OffcanvasOptions;\r\n\r\n  private offcanvas: any;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.offcanvas = new KTOffcanvas(this.el.nativeElement, this.options);\r\n    });\r\n  }\r\n\r\n  getOffcanvas() {\r\n    return this.offcanvas;\r\n  }\r\n}\r\n"]}