{"version":3,"sources":["property.effects.ts"],"names":[],"mappings":"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","file":"property.effects.js","sourcesContent":["import { forkJoin, Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { mergeMap, map, tap } from 'rxjs/operators';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Store, Action } from '@ngrx/store';\r\n\r\nimport { PropertiesService } from '../_services/';\r\nimport { AppState } from '../../reducers';\r\nimport {\r\n  PropertyActionTypes,\r\n  PropertiesPageRequested,\r\n  PropertiesPageLoaded,\r\n  ManyPropertiesDeleted,\r\n  OnePropertyDeleted,\r\n  PropertiesPageToggleLoading,\r\n  PropertiesStatusUpdated,\r\n  PropertyUpdated,\r\n  PropertyCreated,\r\n  PropertyOnServerCreated\r\n} from '../_actions/property.actions';\r\nimport { QueryParamsModel, QueryResultsModel } from '../../_base/crud';\r\n\r\n@Injectable()\r\nexport class PropertyEffects {\r\n\r\n  showPageLoadingDistpatcher = new PropertiesPageToggleLoading({ isLoading: true });\r\n  showLoadingDistpatcher = new PropertiesPageToggleLoading({ isLoading: true });\r\n  hideActionLoadingDistpatcher = new PropertiesPageToggleLoading({ isLoading: false });\r\n\r\n  @Effect()\r\n  loadPropertiesPage$: Observable<PropertiesPageLoaded> = this.actions$.pipe(\r\n    ofType<PropertiesPageRequested>(PropertyActionTypes.PropertiesPageRequested),\r\n    mergeMap(({ payload }) => {\r\n      this.store.dispatch(this.showPageLoadingDistpatcher);\r\n      const requestToServer = this.propertiesService.findProperties(payload.page);\r\n      const lastQuery = of(payload.page);\r\n      return forkJoin([requestToServer, lastQuery]);\r\n    }),\r\n    map(response => {\r\n      const result: QueryResultsModel = response[0];\r\n      const lastQuery: QueryParamsModel = response[1];\r\n      return new PropertiesPageLoaded({\r\n        properties: result.items,\r\n        totalCount: result.totalCount,\r\n        page: lastQuery\r\n      });\r\n    }),\r\n  );\r\n\r\n  @Effect()\r\n  deleteproperty$: Observable<PropertiesPageToggleLoading> = this.actions$.pipe(\r\n    ofType<OnePropertyDeleted>(PropertyActionTypes.OnePropertyDeleted),\r\n    mergeMap(({ payload }) => {\r\n      this.store.dispatch(this.showLoadingDistpatcher);\r\n      return this.propertiesService.deleteProperty(payload.id);\r\n    }\r\n    ),\r\n    map(() => {\r\n      return this.hideActionLoadingDistpatcher;\r\n    }),\r\n  );\r\n\r\n  @Effect()\r\n  deleteProperties$: Observable<PropertiesPageToggleLoading> = this.actions$.pipe(\r\n    ofType<ManyPropertiesDeleted>(PropertyActionTypes.ManyPropertiesDeleted),\r\n    mergeMap(({ payload }) => {\r\n      this.store.dispatch(this.showLoadingDistpatcher);\r\n      return this.propertiesService.deleteProperties(payload.ids);\r\n    }\r\n    ),\r\n    map(() => {\r\n      return this.hideActionLoadingDistpatcher;\r\n    }),\r\n  );\r\n\r\n  /*@Effect()\r\n  updatePropertiesStatus$: Observable<PropertiesPageToggleLoading> = this.actions$.pipe(\r\n    ofType<PropertiesStatusUpdated>(PropertyActionTypes.PropertiesStatusUpdated),\r\n    mergeMap(({ payload }) => {\r\n      this.store.dispatch(this.showLoadingDistpatcher);\r\n      return this.propertiesService.updateStatusForProperty(payload.properties, payload.status);\r\n    }),\r\n    map(() => {\r\n      return this.hideActionLoadingDistpatcher;\r\n    }),\r\n  );*/\r\n\r\n  @Effect()\r\n  updateProperty$: Observable<PropertiesPageToggleLoading> = this.actions$.pipe(\r\n    ofType<PropertyUpdated>(PropertyActionTypes.PropertyUpdated),\r\n    mergeMap(({ payload }) => {\r\n      this.store.dispatch(this.showLoadingDistpatcher);\r\n      return this.propertiesService.updateProperty(payload.property);\r\n    }),\r\n    map(() => {\r\n      return this.hideActionLoadingDistpatcher;\r\n    }),\r\n  );\r\n\r\n  @Effect()\r\n  createProperty$: Observable<PropertiesPageToggleLoading> = this.actions$.pipe(\r\n    ofType<PropertyOnServerCreated>(PropertyActionTypes.PropertyOnServerCreated),\r\n    mergeMap(({ payload }) => {\r\n      this.store.dispatch(this.showLoadingDistpatcher);\r\n      return this.propertiesService.createProperty(payload.property).pipe(\r\n        tap(res => {\r\n          this.store.dispatch(new PropertyCreated({ property: res }));\r\n        })\r\n      );\r\n    }),\r\n    map(() => {\r\n      return this.hideActionLoadingDistpatcher;\r\n    }),\r\n  );\r\n\r\n  constructor(private actions$: Actions, private propertiesService: PropertiesService, private store: Store<AppState>) {\r\n  }\r\n}\r\n"]}