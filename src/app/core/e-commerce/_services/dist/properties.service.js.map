{"version":3,"sources":["properties.service.ts"],"names":[],"mappings":"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","file":"properties.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\nimport { PropertyModel } from '../_models/property.model';\r\nimport { HttpUtilsService, QueryParamsModel, QueryResultsModel } from '../../_base/crud';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst API_PROPERTIES_URL = 'http://localhost:3000/api/property';\r\n\r\n@Injectable()\r\nexport class PropertiesService {\r\n\r\n  url = '../../../../assets/data/';\r\n\r\n  lastFilter$: BehaviorSubject<QueryParamsModel> = new BehaviorSubject(new QueryParamsModel({}, 'asc', '', 0, 10));\r\n\r\n  constructor(private http: HttpClient, private httpUtils: HttpUtilsService) {\r\n  }\r\n\r\n  public getFeaturedProperties(): Observable<PropertyModel[]> {\r\n    return this.http.get<PropertyModel[]>(`${this.url}featured-properties.json`);\r\n  }\r\n\r\n  public getProperties(): Observable<PropertyModel[]> {\r\n    return this.http.get<PropertyModel[]>(API_PROPERTIES_URL);\r\n  }\r\n\r\n  public getPropertyByIdTwo(id: number): Observable<PropertyModel> {\r\n    return this.http.get<PropertyModel>(`${this.url}property-${id}.json`);\r\n  }\r\n\r\n  public getPropertyTypes(): Array<any> {\r\n    return [\r\n      { id: 1, name: 'Office' },\r\n      { id: 2, name: 'House' },\r\n      { id: 3, name: 'Apartment' }\r\n    ];\r\n  }\r\n\r\n  createProperty(property: PropertyModel): Observable<PropertyModel> {\r\n    const httpHeaders = this.httpUtils.getHTTPHeaders();\r\n    return this.http.post<PropertyModel>(API_PROPERTIES_URL, property, { headers: httpHeaders });\r\n  }\r\n\r\n  getAllProperties(): Observable<PropertyModel[]> {\r\n    return this.http.get<PropertyModel[]>(API_PROPERTIES_URL);\r\n  }\r\n\r\n  getPropertyById(propertyId: string): Observable<PropertyModel> {\r\n    return this.http.get<PropertyModel>(API_PROPERTIES_URL + `/${propertyId}`);\r\n  }\r\n\r\n  findProperties(queryParams: QueryParamsModel): Observable<QueryResultsModel> {\r\n    console.log('findProperties');\r\n    return this.http.post<QueryResultsModel>(API_PROPERTIES_URL + '/findProperties', queryParams, { headers: this.httpHeaders() });\r\n  }\r\n\r\n  updateProperty(property: PropertyModel): Observable<any> {\r\n    const httpHeaders = this.httpUtils.getHTTPHeaders();\r\n    return this.http.put(API_PROPERTIES_URL, property, { headers: httpHeaders });\r\n  }\r\n\r\n  updateStatusForProperty(property: PropertyModel[], status: string): Observable<any> {\r\n    const httpHeaders = this.httpUtils.getHTTPHeaders();\r\n    const body = {\r\n      productsForUpdate: property,\r\n      newStatus: status\r\n    };\r\n    const url = API_PROPERTIES_URL + '/updateStatus';\r\n    return this.http.put(url, body, { headers: httpHeaders });\r\n  }\r\n\r\n  deleteProperty(propertyId: string): Observable<PropertyModel> {\r\n    const url = `${API_PROPERTIES_URL}/${propertyId}`;\r\n    return this.http.delete<PropertyModel>(url);\r\n  }\r\n\r\n  deleteProperties(ids: string[] = []): Observable<any> {\r\n    const url = API_PROPERTIES_URL + '/delete';\r\n    const httpHeaders = this.httpUtils.getHTTPHeaders();\r\n    const body = { prdocutIdsForDelete: ids };\r\n    return this.http.put<QueryResultsModel>(url, body, { headers: httpHeaders });\r\n  }\r\n\r\n  private httpHeaders(): HttpHeaders {\r\n    const userToken = localStorage.getItem(environment.authTokenKey);\r\n    let httpHeaders = new HttpHeaders();\r\n    httpHeaders = httpHeaders.set('Content-Type', 'application/json');\r\n    httpHeaders = httpHeaders.set('Authorization', `Bearer ${userToken}`);\r\n    return httpHeaders;\r\n  }\r\n\r\n}\r\n"]}