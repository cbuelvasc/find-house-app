{"version":3,"sources":["property.actions.ts"],"names":["PropertyActionTypes","exports","PropertyOnServerCreated","payload","this","type","PropertyCreated","PropertyUpdated","PropertiesStatusUpdated","OnePropertyDeleted","ManyPropertiesDeleted","PropertiesPageRequested","PropertiesPageLoaded","PropertiesPageCancelled","PropertiesPageToggleLoading","PropertiesActionToggleLoading"],"mappings":"aAMA,IAAYA,0CAAZ,SAAYA,GACVA,EAAA,wBAAA,uDACAA,EAAA,gBAAA,6CACAA,EAAA,gBAAA,6CACAA,EAAA,wBAAA,mDACAA,EAAA,mBAAA,8CACAA,EAAA,sBAAA,0DACAA,EAAA,wBAAA,mDACAA,EAAA,qBAAA,0CACAA,EAAA,wBAAA,6CACAA,EAAA,4BAAA,8CACAA,EAAA,8BAAA,gDAXF,CAAYA,oBAAAC,QAAAD,sBAAAC,QAAAD,oBAAmB,KAc/B,IAAAE,wBAGE,SAAmBC,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBE,yBADzBD,QAAAC,wBAAAA,wBAOb,IAAAI,gBAGE,SAAmBH,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBM,iBADzBL,QAAAK,gBAAAA,gBAOb,IAAAC,gBAGE,SAAmBJ,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBO,iBADzBN,QAAAM,gBAAAA,gBAUb,IAAAC,wBAGE,SAAmBL,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBQ,yBADzBP,QAAAO,wBAAAA,wBAUb,IAAAC,mBAGE,SAAmBN,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBS,oBADzBR,QAAAQ,mBAAAA,mBAOb,IAAAC,sBAGE,SAAmBP,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBU,uBADzBT,QAAAS,sBAAAA,sBAOb,IAAAC,wBAGE,SAAmBR,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBW,yBADzBV,QAAAU,wBAAAA,wBAOb,IAAAC,qBAGE,SAAmBT,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBY,sBADzBX,QAAAW,qBAAAA,qBAOb,IAAAC,wBAAA,WACWT,KAAAC,KAAOL,oBAAoBa,yBADzBZ,QAAAY,wBAAAA,wBAIb,IAAAC,4BAGE,SAAmBX,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBc,6BADzBb,QAAAa,4BAAAA,4BAOb,IAAAC,8BAGE,SAAmBZ,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,oBAAoBe,+BADzBd,QAAAc,8BAAAA","file":"property.actions.min.js","sourcesContent":["import { Action } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { PropertyModel } from '../_models/property.model';\r\nimport { QueryParamsModel } from '../../_base/crud';\r\n\r\nexport enum PropertyActionTypes {\r\n  PropertyOnServerCreated = '[Edit Property Component] Property On Server Created',\r\n  PropertyCreated = '[Edit Property Component] Property Created',\r\n  PropertyUpdated = '[Edit Property Component] Property Updated',\r\n  PropertiesStatusUpdated = '[Properties List Page] Properties Status Updated',\r\n  OnePropertyDeleted = '[Properties List Page] One Property Deleted',\r\n  ManyPropertiesDeleted = '[Properties List Page] Many Selected Properties Deleted',\r\n  PropertiesPageRequested = '[Properties List Page] Properties Page Requested',\r\n  PropertiesPageLoaded = '[Properties API] Properties Page Loaded',\r\n  PropertiesPageCancelled = '[Properties API] Properties Page Cancelled',\r\n  PropertiesPageToggleLoading = '[Properties] Properties Page Toggle Loading',\r\n  PropertiesActionToggleLoading = '[Properties] Properties Action Toggle Loading'\r\n}\r\n\r\nexport class PropertyOnServerCreated implements Action {\r\n  readonly type = PropertyActionTypes.PropertyOnServerCreated;\r\n\r\n  constructor(public payload: { property: PropertyModel }) {\r\n  }\r\n}\r\n\r\nexport class PropertyCreated implements Action {\r\n  readonly type = PropertyActionTypes.PropertyCreated;\r\n\r\n  constructor(public payload: { property: PropertyModel }) {\r\n  }\r\n}\r\n\r\nexport class PropertyUpdated implements Action {\r\n  readonly type = PropertyActionTypes.PropertyUpdated;\r\n\r\n  constructor(public payload: {\r\n    partialProperty: Update<PropertyModel>,\r\n    property: PropertyModel\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class PropertiesStatusUpdated implements Action {\r\n  readonly type = PropertyActionTypes.PropertiesStatusUpdated;\r\n\r\n  constructor(public payload: {\r\n    properties: PropertyModel[],\r\n    status: number\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class OnePropertyDeleted implements Action {\r\n  readonly type = PropertyActionTypes.OnePropertyDeleted;\r\n\r\n  constructor(public payload: { id: string }) {\r\n  }\r\n}\r\n\r\nexport class ManyPropertiesDeleted implements Action {\r\n  readonly type = PropertyActionTypes.ManyPropertiesDeleted;\r\n\r\n  constructor(public payload: { ids: string[] }) {\r\n  }\r\n}\r\n\r\nexport class PropertiesPageRequested implements Action {\r\n  readonly type = PropertyActionTypes.PropertiesPageRequested;\r\n\r\n  constructor(public payload: { page: QueryParamsModel }) {\r\n  }\r\n}\r\n\r\nexport class PropertiesPageLoaded implements Action {\r\n  readonly type = PropertyActionTypes.PropertiesPageLoaded;\r\n\r\n  constructor(public payload: { properties: PropertyModel[], totalCount: number, page: QueryParamsModel }) {\r\n  }\r\n}\r\n\r\nexport class PropertiesPageCancelled implements Action {\r\n  readonly type = PropertyActionTypes.PropertiesPageCancelled;\r\n}\r\n\r\nexport class PropertiesPageToggleLoading implements Action {\r\n  readonly type = PropertyActionTypes.PropertiesPageToggleLoading;\r\n\r\n  constructor(public payload: { isLoading: boolean }) {\r\n  }\r\n}\r\n\r\nexport class PropertiesActionToggleLoading implements Action {\r\n  readonly type = PropertyActionTypes.PropertiesActionToggleLoading;\r\n\r\n  constructor(public payload: { isLoading: boolean }) {\r\n  }\r\n}\r\n\r\nexport type PropertyActions = PropertyOnServerCreated\r\n  | PropertyCreated\r\n  | PropertyUpdated\r\n  | PropertiesStatusUpdated\r\n  | OnePropertyDeleted\r\n  | ManyPropertiesDeleted\r\n  | PropertiesPageRequested\r\n  | PropertiesPageLoaded\r\n  | PropertiesPageCancelled\r\n  | PropertiesPageToggleLoading\r\n  | PropertiesActionToggleLoading;\r\n"]}