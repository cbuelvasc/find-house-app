{"version":3,"sources":["product.actions.ts"],"names":["ProductActionTypes","exports","ProductOnServerCreated","payload","this","type","ProductCreated","ProductUpdated","ProductsStatusUpdated","OneProductDeleted","ManyProductsDeleted","ProductsPageRequested","ProductsPageLoaded","ProductsPageCancelled","ProductsPageToggleLoading","ProductsActionToggleLoading"],"mappings":"aAMA,IAAYA,yCAAZ,SAAYA,GACVA,EAAA,uBAAA,qDACAA,EAAA,eAAA,2CACAA,EAAA,eAAA,2CACAA,EAAA,sBAAA,+CACAA,EAAA,kBAAA,2CACAA,EAAA,oBAAA,sDACAA,EAAA,sBAAA,+CACAA,EAAA,mBAAA,sCACAA,EAAA,sBAAA,yCACAA,EAAA,0BAAA,0CACAA,EAAA,4BAAA,4CAXF,CAAYA,mBAAAC,QAAAD,qBAAAC,QAAAD,mBAAkB,KAc9B,IAAAE,uBAGE,SAAmBC,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBE,wBADxBD,QAAAC,uBAAAA,uBAOb,IAAAI,eAGE,SAAmBH,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBM,gBADxBL,QAAAK,eAAAA,eAOb,IAAAC,eAGE,SAAmBJ,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBO,gBADxBN,QAAAM,eAAAA,eAUb,IAAAC,sBAGE,SAAmBL,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBQ,uBADxBP,QAAAO,sBAAAA,sBAUb,IAAAC,kBAGE,SAAmBN,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBS,mBADxBR,QAAAQ,kBAAAA,kBAOb,IAAAC,oBAGE,SAAmBP,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBU,qBADxBT,QAAAS,oBAAAA,oBAOb,IAAAC,sBAGE,SAAmBR,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBW,uBADxBV,QAAAU,sBAAAA,sBAOb,IAAAC,mBAGE,SAAmBT,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBY,oBADxBX,QAAAW,mBAAAA,mBAOb,IAAAC,sBAAA,WACWT,KAAAC,KAAOL,mBAAmBa,uBADxBZ,QAAAY,sBAAAA,sBAIb,IAAAC,0BAGE,SAAmBX,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBc,2BADxBb,QAAAa,0BAAAA,0BAOb,IAAAC,4BAGE,SAAmBZ,GAAAC,KAAAD,QAAAA,EAFVC,KAAAC,KAAOL,mBAAmBe,6BADxBd,QAAAc,4BAAAA","file":"product.actions.min.js","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nimport { QueryParamsModel } from '../../_base/crud';\r\nimport { ProductModel } from '../_models/product.model';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nexport enum ProductActionTypes {\r\n  ProductOnServerCreated = '[Edit Product Component] Product On Server Created',\r\n  ProductCreated = '[Edit Product Component] Product Created',\r\n  ProductUpdated = '[Edit Product Component] Product Updated',\r\n  ProductsStatusUpdated = '[Products List Page] Products Status Updated',\r\n  OneProductDeleted = '[Products List Page] One Product Deleted',\r\n  ManyProductsDeleted = '[Products List Page] Many Selected Products Deleted',\r\n  ProductsPageRequested = '[Products List Page] Products Page Requested',\r\n  ProductsPageLoaded = '[Products API] Products Page Loaded',\r\n  ProductsPageCancelled = '[Products API] Products Page Cancelled',\r\n  ProductsPageToggleLoading = '[Products] Products Page Toggle Loading',\r\n  ProductsActionToggleLoading = '[Products] Products Action Toggle Loading'\r\n}\r\n\r\nexport class ProductOnServerCreated implements Action {\r\n  readonly type = ProductActionTypes.ProductOnServerCreated;\r\n\r\n  constructor(public payload: { product: ProductModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductCreated implements Action {\r\n  readonly type = ProductActionTypes.ProductCreated;\r\n\r\n  constructor(public payload: { product: ProductModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductUpdated implements Action {\r\n  readonly type = ProductActionTypes.ProductUpdated;\r\n\r\n  constructor(public payload: {\r\n    partialProduct: Update<ProductModel>, // For State update\r\n    product: ProductModel // For Server update (through service)\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class ProductsStatusUpdated implements Action {\r\n  readonly type = ProductActionTypes.ProductsStatusUpdated;\r\n\r\n  constructor(public payload: {\r\n    products: ProductModel[],\r\n    status: number\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class OneProductDeleted implements Action {\r\n  readonly type = ProductActionTypes.OneProductDeleted;\r\n\r\n  constructor(public payload: { id: string }) {\r\n  }\r\n}\r\n\r\nexport class ManyProductsDeleted implements Action {\r\n  readonly type = ProductActionTypes.ManyProductsDeleted;\r\n\r\n  constructor(public payload: { ids: string[] }) {\r\n  }\r\n}\r\n\r\nexport class ProductsPageRequested implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageRequested;\r\n\r\n  constructor(public payload: { page: QueryParamsModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductsPageLoaded implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageLoaded;\r\n\r\n  constructor(public payload: { products: ProductModel[], totalCount: number, page: QueryParamsModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductsPageCancelled implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageCancelled;\r\n}\r\n\r\nexport class ProductsPageToggleLoading implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageToggleLoading;\r\n\r\n  constructor(public payload: { isLoading: boolean }) {\r\n  }\r\n}\r\n\r\nexport class ProductsActionToggleLoading implements Action {\r\n  readonly type = ProductActionTypes.ProductsActionToggleLoading;\r\n\r\n  constructor(public payload: { isLoading: boolean }) {\r\n  }\r\n}\r\n\r\nexport type ProductActions = ProductOnServerCreated\r\n  | ProductCreated\r\n  | ProductUpdated\r\n  | ProductsStatusUpdated\r\n  | OneProductDeleted\r\n  | ManyProductsDeleted\r\n  | ProductsPageRequested\r\n  | ProductsPageLoaded\r\n  | ProductsPageCancelled\r\n  | ProductsPageToggleLoading\r\n  | ProductsActionToggleLoading;\r\n"]}