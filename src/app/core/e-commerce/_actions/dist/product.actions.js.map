{"version":3,"sources":["product.actions.ts"],"names":[],"mappings":";;AAMA,IAAY,kBAYX;AAZD,WAAY,kBAAkB;IAC5B,mGAA6E,CAAA;IAC7E,iFAA2D,CAAA;IAC3D,iFAA2D,CAAA;IAC3D,4FAAsE,CAAA;IACtE,oFAA8D,CAAA;IAC9D,iGAA2E,CAAA;IAC3E,4FAAsE,CAAA;IACtE,gFAA0D,CAAA;IAC1D,sFAAgE,CAAA;IAChE,2FAAqE,CAAA;IACrE,+FAAyE,CAAA;AAC3E,CAAC,EAZW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAY7B;AAED;IAGE,gCAAmB,OAAkC;QAAlC,YAAO,GAAP,OAAO,CAA2B;QAF5C,SAAI,GAAG,kBAAkB,CAAC,sBAAsB,CAAC;IAG1D,CAAC;IACH,6BAAC;AAAD,CALA,AAKC,IAAA;AALY,wDAAsB;AAOnC;IAGE,wBAAmB,OAAkC;QAAlC,YAAO,GAAP,OAAO,CAA2B;QAF5C,SAAI,GAAG,kBAAkB,CAAC,cAAc,CAAC;IAGlD,CAAC;IACH,qBAAC;AAAD,CALA,AAKC,IAAA;AALY,wCAAc;AAO3B;IAGE,wBAAmB,OAGlB;QAHkB,YAAO,GAAP,OAAO,CAGzB;QALQ,SAAI,GAAG,kBAAkB,CAAC,cAAc,CAAC;IAMlD,CAAC;IACH,qBAAC;AAAD,CARA,AAQC,IAAA;AARY,wCAAc;AAU3B;IAGE,+BAAmB,OAGlB;QAHkB,YAAO,GAAP,OAAO,CAGzB;QALQ,SAAI,GAAG,kBAAkB,CAAC,qBAAqB,CAAC;IAMzD,CAAC;IACH,4BAAC;AAAD,CARA,AAQC,IAAA;AARY,sDAAqB;AAUlC;IAGE,2BAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,kBAAkB,CAAC,iBAAiB,CAAC;IAGrD,CAAC;IACH,wBAAC;AAAD,CALA,AAKC,IAAA;AALY,8CAAiB;AAO9B;IAGE,6BAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,GAAG,kBAAkB,CAAC,mBAAmB,CAAC;IAGvD,CAAC;IACH,0BAAC;AAAD,CALA,AAKC,IAAA;AALY,kDAAmB;AAOhC;IAGE,+BAAmB,OAAmC;QAAnC,YAAO,GAAP,OAAO,CAA4B;QAF7C,SAAI,GAAG,kBAAkB,CAAC,qBAAqB,CAAC;IAGzD,CAAC;IACH,4BAAC;AAAD,CALA,AAKC,IAAA;AALY,sDAAqB;AAOlC;IAGE,4BAAmB,OAAiF;QAAjF,YAAO,GAAP,OAAO,CAA0E;QAF3F,SAAI,GAAG,kBAAkB,CAAC,kBAAkB,CAAC;IAGtD,CAAC;IACH,yBAAC;AAAD,CALA,AAKC,IAAA;AALY,gDAAkB;AAO/B;IAAA;QACW,SAAI,GAAG,kBAAkB,CAAC,qBAAqB,CAAC;IAC3D,CAAC;IAAD,4BAAC;AAAD,CAFA,AAEC,IAAA;AAFY,sDAAqB;AAIlC;IAGE,mCAAmB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;QAFzC,SAAI,GAAG,kBAAkB,CAAC,yBAAyB,CAAC;IAG7D,CAAC;IACH,gCAAC;AAAD,CALA,AAKC,IAAA;AALY,8DAAyB;AAOtC;IAGE,qCAAmB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;QAFzC,SAAI,GAAG,kBAAkB,CAAC,2BAA2B,CAAC;IAG/D,CAAC;IACH,kCAAC;AAAD,CALA,AAKC,IAAA;AALY,kEAA2B","file":"product.actions.js","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nimport { QueryParamsModel } from '../../_base/crud';\r\nimport { ProductModel } from '../_models/product.model';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nexport enum ProductActionTypes {\r\n  ProductOnServerCreated = '[Edit Product Component] Product On Server Created',\r\n  ProductCreated = '[Edit Product Component] Product Created',\r\n  ProductUpdated = '[Edit Product Component] Product Updated',\r\n  ProductsStatusUpdated = '[Products List Page] Products Status Updated',\r\n  OneProductDeleted = '[Products List Page] One Product Deleted',\r\n  ManyProductsDeleted = '[Products List Page] Many Selected Products Deleted',\r\n  ProductsPageRequested = '[Products List Page] Products Page Requested',\r\n  ProductsPageLoaded = '[Products API] Products Page Loaded',\r\n  ProductsPageCancelled = '[Products API] Products Page Cancelled',\r\n  ProductsPageToggleLoading = '[Products] Products Page Toggle Loading',\r\n  ProductsActionToggleLoading = '[Products] Products Action Toggle Loading'\r\n}\r\n\r\nexport class ProductOnServerCreated implements Action {\r\n  readonly type = ProductActionTypes.ProductOnServerCreated;\r\n\r\n  constructor(public payload: { product: ProductModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductCreated implements Action {\r\n  readonly type = ProductActionTypes.ProductCreated;\r\n\r\n  constructor(public payload: { product: ProductModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductUpdated implements Action {\r\n  readonly type = ProductActionTypes.ProductUpdated;\r\n\r\n  constructor(public payload: {\r\n    partialProduct: Update<ProductModel>, // For State update\r\n    product: ProductModel // For Server update (through service)\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class ProductsStatusUpdated implements Action {\r\n  readonly type = ProductActionTypes.ProductsStatusUpdated;\r\n\r\n  constructor(public payload: {\r\n    products: ProductModel[],\r\n    status: number\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class OneProductDeleted implements Action {\r\n  readonly type = ProductActionTypes.OneProductDeleted;\r\n\r\n  constructor(public payload: { id: string }) {\r\n  }\r\n}\r\n\r\nexport class ManyProductsDeleted implements Action {\r\n  readonly type = ProductActionTypes.ManyProductsDeleted;\r\n\r\n  constructor(public payload: { ids: string[] }) {\r\n  }\r\n}\r\n\r\nexport class ProductsPageRequested implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageRequested;\r\n\r\n  constructor(public payload: { page: QueryParamsModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductsPageLoaded implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageLoaded;\r\n\r\n  constructor(public payload: { products: ProductModel[], totalCount: number, page: QueryParamsModel }) {\r\n  }\r\n}\r\n\r\nexport class ProductsPageCancelled implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageCancelled;\r\n}\r\n\r\nexport class ProductsPageToggleLoading implements Action {\r\n  readonly type = ProductActionTypes.ProductsPageToggleLoading;\r\n\r\n  constructor(public payload: { isLoading: boolean }) {\r\n  }\r\n}\r\n\r\nexport class ProductsActionToggleLoading implements Action {\r\n  readonly type = ProductActionTypes.ProductsActionToggleLoading;\r\n\r\n  constructor(public payload: { isLoading: boolean }) {\r\n  }\r\n}\r\n\r\nexport type ProductActions = ProductOnServerCreated\r\n  | ProductCreated\r\n  | ProductUpdated\r\n  | ProductsStatusUpdated\r\n  | OneProductDeleted\r\n  | ManyProductsDeleted\r\n  | ProductsPageRequested\r\n  | ProductsPageLoaded\r\n  | ProductsPageCancelled\r\n  | ProductsPageToggleLoading\r\n  | ProductsActionToggleLoading;\r\n"]}