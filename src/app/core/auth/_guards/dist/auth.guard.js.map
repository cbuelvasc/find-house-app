{"version":3,"sources":["auth.guard.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAG3C,4CAAqC;AACrC,qCAA4C;AAG5C,+DAA0D;AAG1D;IAEE,mBAAoB,KAAsB,EAAU,MAAc;QAA9C,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAClE,CAAC;IAED,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QAArE,iBAUC;QATC,OAAO,IAAI,CAAC,KAAK;aACd,IAAI,CACH,cAAM,CAAC,2BAAU,CAAC,EAClB,eAAG,CAAC,UAAA,QAAQ;YACV,IAAI,CAAC,QAAQ,EAAE;gBACb,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAfU,SAAS;QADrB,iBAAU,EAAE;OACA,SAAS,CAgBrB;IAAD,gBAAC;CAhBD,AAgBC,IAAA;AAhBY,8BAAS","file":"auth.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { AppState } from '../../../core/reducers/';\r\nimport { isLoggedIn } from '../_selectors/auth.selectors';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private store: Store<AppState>, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.store\r\n      .pipe(\r\n        select(isLoggedIn),\r\n        tap(loggedIn => {\r\n          if (!loggedIn) {\r\n            this.router.navigateByUrl('/auth/login');\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n"]}