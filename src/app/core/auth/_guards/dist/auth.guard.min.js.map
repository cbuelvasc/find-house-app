{"version":3,"sources":["auth.guard.ts"],"names":["core_1","require","operators_1","store_1","auth_selectors_1","AuthGuard","store","router","this","prototype","canActivate","route","state","_this","pipe","select","isLoggedIn","tap","loggedIn","navigateByUrl","__decorate","Injectable","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAGAC,YAAAD,QAAA,kBACAE,QAAAF,QAAA,eAGAG,iBAAAH,QAAA,gCAGAI,UAAA,WAEE,SAAAA,EAAoBC,EAAgCC,GAAhCC,KAAAF,MAAAA,EAAgCE,KAAAD,OAAAA,EActD,OAXEF,EAAAI,UAAAC,YAAA,SAAYC,EAA+BC,GAA3C,IAAAC,EAAAL,KACE,OAAOA,KAAKF,MACTQ,KACCX,QAAAY,OAAOX,iBAAAY,YACPd,YAAAe,IAAI,SAAAC,GACGA,GACHL,EAAKN,OAAOY,cAAc,mBAXzBd,EAASe,WAAA,CADrBpB,OAAAqB,cACYhB,GAAb,GAAaiB,QAAAjB,UAAAA","file":"auth.guard.min.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { AppState } from '../../../core/reducers/';\r\nimport { isLoggedIn } from '../_selectors/auth.selectors';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private store: Store<AppState>, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.store\r\n      .pipe(\r\n        select(isLoggedIn),\r\n        tap(loggedIn => {\r\n          if (!loggedIn) {\r\n            this.router.navigateByUrl('/auth/login');\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n"]}