{"version":3,"sources":["module.guard.ts"],"names":["core_1","require","rxjs_1","operators_1","store_1","auth_selectors_1","lodash_1","ModuleGuard","store","router","this","prototype","canActivate","route","state","_this","moduleName","data","pipe","select","currentUserPermissions","map","permissions","find","elem","title","toLocaleLowerCase","tap","hasAccess","navigateByUrl","of","__decorate","Injectable","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAEAC,OAAAD,QAAA,QACAE,YAAAF,QAAA,kBACAG,QAAAH,QAAA,eAGAI,iBAAAJ,QAAA,gCAEAK,SAAAL,QAAA,UAGAM,YAAA,WACE,SAAAA,EAAoBC,EAAgCC,GAAhCC,KAAAF,MAAAA,EAAgCE,KAAAD,OAAAA,EAwBtD,OArBEF,EAAAI,UAAAC,YAAA,SAAYC,EAA+BC,GAA3C,IAAAC,EAAAL,KACQM,EAAaH,EAAMI,KAAKD,WAC9B,OAAKA,EAGEN,KAAKF,MACTU,KACCd,QAAAe,OAAOd,iBAAAe,wBACPjB,YAAAkB,IAAI,SAACC,GAIH,QAHahB,SAAAiB,KAAKD,EAAa,SAACE,GAC9B,OAAOA,EAAKC,MAAMC,sBAAwBV,EAAWU,wBAIzDvB,YAAAwB,IAAI,SAAAC,GACGA,GACHb,EAAKN,OAAOoB,cAAc,iBAbzB3B,OAAA4B,IAAG,IAPHvB,EAAWwB,WAAA,CADvB/B,OAAAgC,cACYzB,GAAb,GAAa0B,QAAA1B,YAAAA","file":"module.guard.min.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { AppState } from '../../../core/reducers/';\r\nimport { currentUserPermissions } from '../_selectors/auth.selectors';\r\nimport { Permission } from '../_models/permission.model';\r\nimport { find } from 'lodash';\r\n\r\n@Injectable()\r\nexport class ModuleGuard implements CanActivate {\r\n  constructor(private store: Store<AppState>, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    const moduleName = route.data.moduleName as string;\r\n    if (!moduleName) {\r\n      return of(false);\r\n    }\r\n    return this.store\r\n      .pipe(\r\n        select(currentUserPermissions),\r\n        map((permissions: Permission[]) => {\r\n          const perm = find(permissions, (elem: Permission) => {\r\n            return elem.title.toLocaleLowerCase() === moduleName.toLocaleLowerCase();\r\n          });\r\n          return perm ? true : false;\r\n        }),\r\n        tap(hasAccess => {\r\n          if (!hasAccess) {\r\n            this.router.navigateByUrl('/error/403');\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n"]}