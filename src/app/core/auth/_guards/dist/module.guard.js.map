{"version":3,"sources":["module.guard.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAE3C,6BAAsC;AACtC,4CAA0C;AAC1C,qCAA4C;AAG5C,+DAAsE;AAEtE,iCAA8B;AAG9B;IACE,qBAAoB,KAAsB,EAAU,MAAc;QAA9C,UAAK,GAAL,KAAK,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAClE,CAAC;IAED,iCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QAArE,iBAoBC;QAnBC,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,UAAoB,CAAC;QACnD,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,SAAE,CAAC,KAAK,CAAC,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,KAAK;aACd,IAAI,CACH,cAAM,CAAC,uCAAsB,CAAC,EAC9B,eAAG,CAAC,UAAC,WAAyB;YAC5B,IAAM,IAAI,GAAG,aAAI,CAAC,WAAW,EAAE,UAAC,IAAgB;gBAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,KAAK,UAAU,CAAC,iBAAiB,EAAE,CAAC;YAC3E,CAAC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7B,CAAC,CAAC,EACF,eAAG,CAAC,UAAA,SAAS;YACX,IAAI,CAAC,SAAS,EAAE;gBACd,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACzC;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAxBU,WAAW;QADvB,iBAAU,EAAE;OACA,WAAW,CAyBvB;IAAD,kBAAC;CAzBD,AAyBC,IAAA;AAzBY,kCAAW","file":"module.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { AppState } from '../../../core/reducers/';\r\nimport { currentUserPermissions } from '../_selectors/auth.selectors';\r\nimport { Permission } from '../_models/permission.model';\r\nimport { find } from 'lodash';\r\n\r\n@Injectable()\r\nexport class ModuleGuard implements CanActivate {\r\n  constructor(private store: Store<AppState>, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    const moduleName = route.data.moduleName as string;\r\n    if (!moduleName) {\r\n      return of(false);\r\n    }\r\n    return this.store\r\n      .pipe(\r\n        select(currentUserPermissions),\r\n        map((permissions: Permission[]) => {\r\n          const perm = find(permissions, (elem: Permission) => {\r\n            return elem.title.toLocaleLowerCase() === moduleName.toLocaleLowerCase();\r\n          });\r\n          return perm ? true : false;\r\n        }),\r\n        tap(hasAccess => {\r\n          if (!hasAccess) {\r\n            this.router.navigateByUrl('/error/403');\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n"]}