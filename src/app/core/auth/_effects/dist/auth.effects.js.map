{"version":3,"sources":["auth.effects.ts"],"names":[],"mappings":"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","file":"auth.effects.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter, mergeMap, tap, withLatestFrom } from 'rxjs/operators';\r\nimport { defer, Observable, of } from 'rxjs';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action, select, Store } from '@ngrx/store';\r\n\r\nimport { AuthActionTypes, Login, Logout, Register, UserLoaded, UserRequested } from '../_actions/auth.actions';\r\nimport { AuthService } from '../_services/index';\r\nimport { AppState } from '../../reducers';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { isUserLoaded } from '../_selectors/auth.selectors';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  @Effect({ dispatch: false })\r\n  login$ = this.actions$.pipe(\r\n    ofType<Login>(AuthActionTypes.Login),\r\n    tap(action => {\r\n      localStorage.setItem(environment.authTokenKey, action.payload.authToken);\r\n      this.store.dispatch(new UserRequested());\r\n    }),\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  logout$ = this.actions$.pipe(\r\n    ofType<Logout>(AuthActionTypes.Logout),\r\n    tap(() => {\r\n      localStorage.removeItem(environment.authTokenKey);\r\n      this.router.navigate(['/auth/login'], { queryParams: { returnUrl: this.returnUrl } });\r\n      document.location.reload();\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  register$ = this.actions$.pipe(\r\n    ofType<Register>(AuthActionTypes.Register),\r\n    tap(action => {\r\n      localStorage.setItem(environment.authTokenKey, action.payload.authToken);\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  loadUser$ = this.actions$\r\n    .pipe(\r\n      ofType<UserRequested>(AuthActionTypes.UserRequested),\r\n      withLatestFrom(this.store.pipe(select(isUserLoaded))),\r\n      filter(([action, _isUserLoaded]) => !_isUserLoaded),\r\n      mergeMap(([action, _isUserLoaded]) => this.auth.getUserByToken()),\r\n      tap(_user => {\r\n        if (_user) {\r\n          this.store.dispatch(new UserLoaded({ user: _user }));\r\n        } else {\r\n          this.store.dispatch(new Logout());\r\n        }\r\n      })\r\n    );\r\n\r\n  @Effect()\r\n  init$: Observable<Action> = defer(() => {\r\n    const userToken = localStorage.getItem(environment.authTokenKey);\r\n    let observableResult = of({ type: 'NO_ACTION' });\r\n    if (userToken) {\r\n      observableResult = of(new Login({ authToken: userToken }));\r\n    }\r\n    return observableResult;\r\n  });\r\n\r\n  private returnUrl: string;\r\n\r\n  constructor(private actions$: Actions,\r\n    private router: Router,\r\n    private auth: AuthService,\r\n    private store: Store<AppState>) {\r\n\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.returnUrl = event.url;\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}