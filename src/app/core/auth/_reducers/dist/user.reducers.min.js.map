{"version":3,"sources":["user.reducers.ts"],"names":["store_1","require","entity_1","user_actions_1","crud_1","usersReducer","state","action","exports","initialUsersState","type","UserActionTypes","UsersPageToggleLoading","__assign","listLoading","payload","isLoading","lastCreatedUserId","undefined","UsersActionToggleLoading","actionsloading","UserOnServerCreated","UserCreated","adapter","addOne","user","id","UserUpdated","updateOne","partialUser","UserDeleted","removeOne","UsersPageCancelled","lastQuery","QueryParamsModel","UsersPageLoaded","addMany","users","totalCount","page","showInitWaitingMessage","createEntityAdapter","getInitialState","getUserState","createFeatureSelector","selectAll","_a","getSelectors","selectEntities","selectIds","selectTotal"],"mappings":"4RACA,IAAAA,QAAAC,QAAA,eACAC,SAAAD,QAAA,gBAEAE,eAAAF,QAAA,4BAEAG,OAAAH,QAAA,oBAyBA,SAAgBI,aAAaC,EAA2BC,GACtD,YAD2B,IAAAD,IAAAA,EAAQE,QAAAC,mBAC3BF,EAAOG,MACb,KAAKP,eAAAQ,gBAAgBC,uBACnB,OAAAC,SAAAA,SAAA,GACKP,GAAK,CAAEQ,YAAaP,EAAOQ,QAAQC,UAAWC,uBAAmBC,IAExE,KAAKf,eAAAQ,gBAAgBQ,yBACnB,OAAAN,SAAAA,SAAA,GACKP,GAAK,CAAEc,eAAgBb,EAAOQ,QAAQC,YAE7C,KAAKb,eAAAQ,gBAAgBU,oBACnB,OAAAR,SAAA,GACKP,GAEP,KAAKH,eAAAQ,gBAAgBW,YACnB,OAAOd,QAAAe,QAAQC,OAAOjB,EAAOQ,QAAQU,KAAIZ,SAAAA,SAAA,GACpCP,GAAK,CAAEW,kBAAmBV,EAAOQ,QAAQU,KAAKC,MAErD,KAAKvB,eAAAQ,gBAAgBgB,YACnB,OAAOnB,QAAAe,QAAQK,UAAUrB,EAAOQ,QAAQc,YAAavB,GACvD,KAAKH,eAAAQ,gBAAgBmB,YACnB,OAAOtB,QAAAe,QAAQQ,UAAUxB,EAAOQ,QAAQW,GAAIpB,GAC9C,KAAKH,eAAAQ,gBAAgBqB,mBACnB,OAAAnB,SAAAA,SAAA,GACKP,GAAK,CAAEQ,aAAa,EAAOmB,UAAW,IAAI7B,OAAA8B,iBAAiB,MAElE,KAAK/B,eAAAQ,gBAAgBwB,gBACnB,OAAO3B,QAAAe,QAAQa,QAAQ7B,EAAOQ,QAAQsB,MAAKxB,SAAAA,SAAA,GACtCL,QAAAC,mBAAiB,CACpB6B,WAAY/B,EAAOQ,QAAQuB,WAC3BL,UAAW1B,EAAOQ,QAAQwB,KAC1BzB,aAAa,EACb0B,wBAAwB,KAG5B,QACE,OAAOlC,GA/CAE,QAAAe,QAA+BrB,SAAAuC,sBAE/BjC,QAAAC,kBAAgCD,QAAAe,QAAQmB,gBAAgB,CACnE5B,aAAa,EACbM,gBAAgB,EAChBkB,WAAY,EACZL,UAAW,IAAI7B,OAAA8B,iBAAiB,IAChCjB,uBAAmBC,EACnBsB,wBAAwB,IAG1BhC,QAAAH,aAAAA,aAwCaG,QAAAmC,aAAe3C,QAAA4C,sBAAkC,SAG5DpC,QAAAqC,WADWC,GAKTtC,QAAAe,QAAQwB,gBAAcF,UAHxBrC,QAAAwC,eAAcF,GAAAE,eACdxC,QAAAyC,UAASH,GAAAG,UACTzC,QAAA0C,YAAWJ,GAAAI","file":"user.reducers.min.js","sourcesContent":["// NGRX\r\nimport { createFeatureSelector } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\n// Actions\r\nimport { UserActions, UserActionTypes } from '../_actions/user.actions';\r\n// CRUD\r\nimport { QueryParamsModel } from '../../_base/crud';\r\n// Models\r\nimport { User } from '../_models/user.model';\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface UsersState extends EntityState<User> {\r\n  listLoading: boolean;\r\n  actionsloading: boolean;\r\n  totalCount: number;\r\n  lastCreatedUserId: string;\r\n  lastQuery: QueryParamsModel;\r\n  showInitWaitingMessage: boolean;\r\n}\r\n\r\nexport const adapter: EntityAdapter<User> = createEntityAdapter<User>();\r\n\r\nexport const initialUsersState: UsersState = adapter.getInitialState({\r\n  listLoading: false,\r\n  actionsloading: false,\r\n  totalCount: 0,\r\n  lastQuery: new QueryParamsModel({}),\r\n  lastCreatedUserId: undefined,\r\n  showInitWaitingMessage: true\r\n});\r\n\r\nexport function usersReducer(state = initialUsersState, action: UserActions): UsersState {\r\n  switch (action.type) {\r\n    case UserActionTypes.UsersPageToggleLoading:\r\n      return {\r\n        ...state, listLoading: action.payload.isLoading, lastCreatedUserId: undefined\r\n      };\r\n    case UserActionTypes.UsersActionToggleLoading:\r\n      return {\r\n        ...state, actionsloading: action.payload.isLoading\r\n      };\r\n    case UserActionTypes.UserOnServerCreated:\r\n      return {\r\n        ...state\r\n      };\r\n    case UserActionTypes.UserCreated:\r\n      return adapter.addOne(action.payload.user, {\r\n        ...state, lastCreatedUserId: action.payload.user.id\r\n      });\r\n    case UserActionTypes.UserUpdated:\r\n      return adapter.updateOne(action.payload.partialUser, state);\r\n    case UserActionTypes.UserDeleted:\r\n      return adapter.removeOne(action.payload.id, state);\r\n    case UserActionTypes.UsersPageCancelled:\r\n      return {\r\n        ...state, listLoading: false, lastQuery: new QueryParamsModel({})\r\n      };\r\n    case UserActionTypes.UsersPageLoaded: {\r\n      return adapter.addMany(action.payload.users, {\r\n        ...initialUsersState,\r\n        totalCount: action.payload.totalCount,\r\n        lastQuery: action.payload.page,\r\n        listLoading: false,\r\n        showInitWaitingMessage: false\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserState = createFeatureSelector<UsersState>('users');\r\n\r\nexport const {\r\n  selectAll,\r\n  selectEntities,\r\n  selectIds,\r\n  selectTotal\r\n} = adapter.getSelectors();\r\n"]}