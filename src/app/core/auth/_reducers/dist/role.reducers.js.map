{"version":3,"sources":["role.reducers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO;AACP,uCAA+E;AAC/E,UAAU;AACV,yDAAwE;AAGxE,yCAAoD;AAavC,QAAA,OAAO,GAAwB,4BAAmB,EAAQ,CAAC;AAE3D,QAAA,iBAAiB,GAAe,eAAO,CAAC,eAAe,CAAC;IACnE,gBAAgB,EAAE,KAAK;IACvB,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,EAAE;IACf,iBAAiB,EAAE,SAAS;IAC5B,WAAW,EAAE,KAAK;IAClB,cAAc,EAAE,KAAK;IACrB,SAAS,EAAE,IAAI,uBAAgB,CAAC,EAAE,CAAC;IACnC,sBAAsB,EAAE,IAAI;CAC7B,CAAC,CAAC;AAEH,SAAgB,YAAY,CAAC,KAAyB,EAAE,MAAmB;IAA9C,sBAAA,EAAA,QAAQ,yBAAiB;IACpD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,8BAAe,CAAC,sBAAsB;YACzC,6BACK,KAAK,KAAE,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,iBAAiB,EAAE,SAAS,IAC7E;QACJ,KAAK,8BAAe,CAAC,wBAAwB;YAC3C,6BACK,KAAK,KAAE,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,IAClD;QACJ,KAAK,8BAAe,CAAC,mBAAmB;YACtC,oBACK,KAAK,EACR;QACJ,KAAK,8BAAe,CAAC,WAAW;YAC9B,OAAO,eAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,wBACpC,KAAK,KAAE,iBAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IACnD,CAAC;QACL,KAAK,8BAAe,CAAC,WAAW;YAC9B,OAAO,eAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAC9D,KAAK,8BAAe,CAAC,WAAW;YAC9B,OAAO,eAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACrD,KAAK,8BAAe,CAAC,cAAc;YACjC,OAAO,eAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,wBACrC,KAAK,KAAE,gBAAgB,EAAE,IAAI,IAChC,CAAC;QACL,KAAK,8BAAe,CAAC,kBAAkB;YACrC,6BACK,KAAK,KAAE,WAAW,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,uBAAgB,CAAC,EAAE,CAAC,IACrG;QACJ,KAAK,8BAAe,CAAC,eAAe;YAClC,OAAO,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,wBACtC,yBAAiB,KACpB,WAAW,EAAE,KAAK,EAClB,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,UAAU,EACzC,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,EACjC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,EAC9B,sBAAsB,EAAE,KAAK,IAC7B,CAAC;QACL;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;AA1CD,oCA0CC;AAGC,QAAA,SAAS,IADE,KAKT,eAAO,CAAC,YAAY,EAAE,iBAHxB,QAAA,cAAc,sBACd,QAAA,SAAS,iBACT,QAAA,WAAW,kBACc","file":"role.reducers.js","sourcesContent":["// NGRX\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\n// Actions\r\nimport { RoleActions, RoleActionTypes } from '../_actions/role.actions';\r\n// Models\r\nimport { Role } from '../_models/role.model';\r\nimport { QueryParamsModel } from '../../_base/crud';\r\n\r\nexport interface RolesState extends EntityState<Role> {\r\n    isAllRolesLoaded: boolean;\r\n    queryRowsCount: number;\r\n    queryResult: Role[];\r\n    lastCreatedRoleId: string;\r\n    listLoading: boolean;\r\n    actionsloading: boolean;\r\n    lastQuery: QueryParamsModel;\r\n    showInitWaitingMessage: boolean;\r\n}\r\n\r\nexport const adapter: EntityAdapter<Role> = createEntityAdapter<Role>();\r\n\r\nexport const initialRolesState: RolesState = adapter.getInitialState({\r\n  isAllRolesLoaded: false,\r\n  queryRowsCount: 0,\r\n  queryResult: [],\r\n  lastCreatedRoleId: undefined,\r\n  listLoading: false,\r\n  actionsloading: false,\r\n  lastQuery: new QueryParamsModel({}),\r\n  showInitWaitingMessage: true\r\n});\r\n\r\nexport function rolesReducer(state = initialRolesState, action: RoleActions): RolesState {\r\n  switch (action.type) {\r\n    case RoleActionTypes.RolesPageToggleLoading:\r\n      return {\r\n        ...state, listLoading: action.payload.isLoading, lastCreatedRoleId: undefined\r\n      };\r\n    case RoleActionTypes.RolesActionToggleLoading:\r\n      return {\r\n        ...state, actionsloading: action.payload.isLoading\r\n      };\r\n    case RoleActionTypes.RoleOnServerCreated:\r\n      return {\r\n        ...state\r\n      };\r\n    case RoleActionTypes.RoleCreated:\r\n      return adapter.addOne(action.payload.role, {\r\n        ...state, lastCreatedRoleId: action.payload.role.id\r\n      });\r\n    case RoleActionTypes.RoleUpdated:\r\n      return adapter.updateOne(action.payload.partialrole, state);\r\n    case RoleActionTypes.RoleDeleted:\r\n      return adapter.removeOne(action.payload.id, state);\r\n    case RoleActionTypes.AllRolesLoaded:\r\n      return adapter.addAll(action.payload.roles, {\r\n        ...state, isAllRolesLoaded: true\r\n      });\r\n    case RoleActionTypes.RolesPageCancelled:\r\n      return {\r\n        ...state, listLoading: false, queryRowsCount: 0, queryResult: [], lastQuery: new QueryParamsModel({})\r\n      };\r\n    case RoleActionTypes.RolesPageLoaded:\r\n      return adapter.addMany(action.payload.roles, {\r\n        ...initialRolesState,\r\n        listLoading: false,\r\n        queryRowsCount: action.payload.totalCount,\r\n        queryResult: action.payload.roles,\r\n        lastQuery: action.payload.page,\r\n        showInitWaitingMessage: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const {\r\n  selectAll,\r\n  selectEntities,\r\n  selectIds,\r\n  selectTotal\r\n} = adapter.getSelectors();\r\n"]}