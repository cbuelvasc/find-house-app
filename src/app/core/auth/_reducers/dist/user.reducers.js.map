{"version":3,"sources":["user.reducers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO;AACP,qCAAoD;AACpD,uCAA+E;AAC/E,UAAU;AACV,yDAAwE;AACxE,OAAO;AACP,yCAAoD;AAcvC,QAAA,OAAO,GAAwB,4BAAmB,EAAQ,CAAC;AAE3D,QAAA,iBAAiB,GAAe,eAAO,CAAC,eAAe,CAAC;IACnE,WAAW,EAAE,KAAK;IAClB,cAAc,EAAE,KAAK;IACrB,UAAU,EAAE,CAAC;IACb,SAAS,EAAE,IAAI,uBAAgB,CAAC,EAAE,CAAC;IACnC,iBAAiB,EAAE,SAAS;IAC5B,sBAAsB,EAAE,IAAI;CAC7B,CAAC,CAAC;AAEH,SAAgB,YAAY,CAAC,KAAyB,EAAE,MAAmB;IAA9C,sBAAA,EAAA,QAAQ,yBAAiB;IACpD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,8BAAe,CAAC,sBAAsB;YACzC,6BACK,KAAK,KAAE,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,iBAAiB,EAAE,SAAS,IAC7E;QACJ,KAAK,8BAAe,CAAC,wBAAwB;YAC3C,6BACK,KAAK,KAAE,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,IAClD;QACJ,KAAK,8BAAe,CAAC,mBAAmB;YACtC,oBACK,KAAK,EACR;QACJ,KAAK,8BAAe,CAAC,WAAW;YAC9B,OAAO,eAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,wBACpC,KAAK,KAAE,iBAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IACnD,CAAC;QACL,KAAK,8BAAe,CAAC,WAAW;YAC9B,OAAO,eAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAC9D,KAAK,8BAAe,CAAC,WAAW;YAC9B,OAAO,eAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACrD,KAAK,8BAAe,CAAC,kBAAkB;YACrC,6BACK,KAAK,KAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,uBAAgB,CAAC,EAAE,CAAC,IACjE;QACJ,KAAK,8BAAe,CAAC,eAAe,CAAC,CAAC;YACpC,OAAO,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,wBACtC,yBAAiB,KACpB,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,UAAU,EACrC,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,EAC9B,WAAW,EAAE,KAAK,EAClB,sBAAsB,EAAE,KAAK,IAC7B,CAAC;SACJ;QACD;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;AAtCD,oCAsCC;AAEY,QAAA,YAAY,GAAG,6BAAqB,CAAa,OAAO,CAAC,CAAC;AAGrE,QAAA,SAAS,IADE,KAKT,eAAO,CAAC,YAAY,EAAE,iBAHxB,QAAA,cAAc,sBACd,QAAA,SAAS,iBACT,QAAA,WAAW,kBACc","file":"user.reducers.js","sourcesContent":["// NGRX\r\nimport { createFeatureSelector } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\n// Actions\r\nimport { UserActions, UserActionTypes } from '../_actions/user.actions';\r\n// CRUD\r\nimport { QueryParamsModel } from '../../_base/crud';\r\n// Models\r\nimport { User } from '../_models/user.model';\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface UsersState extends EntityState<User> {\r\n  listLoading: boolean;\r\n  actionsloading: boolean;\r\n  totalCount: number;\r\n  lastCreatedUserId: string;\r\n  lastQuery: QueryParamsModel;\r\n  showInitWaitingMessage: boolean;\r\n}\r\n\r\nexport const adapter: EntityAdapter<User> = createEntityAdapter<User>();\r\n\r\nexport const initialUsersState: UsersState = adapter.getInitialState({\r\n  listLoading: false,\r\n  actionsloading: false,\r\n  totalCount: 0,\r\n  lastQuery: new QueryParamsModel({}),\r\n  lastCreatedUserId: undefined,\r\n  showInitWaitingMessage: true\r\n});\r\n\r\nexport function usersReducer(state = initialUsersState, action: UserActions): UsersState {\r\n  switch (action.type) {\r\n    case UserActionTypes.UsersPageToggleLoading:\r\n      return {\r\n        ...state, listLoading: action.payload.isLoading, lastCreatedUserId: undefined\r\n      };\r\n    case UserActionTypes.UsersActionToggleLoading:\r\n      return {\r\n        ...state, actionsloading: action.payload.isLoading\r\n      };\r\n    case UserActionTypes.UserOnServerCreated:\r\n      return {\r\n        ...state\r\n      };\r\n    case UserActionTypes.UserCreated:\r\n      return adapter.addOne(action.payload.user, {\r\n        ...state, lastCreatedUserId: action.payload.user.id\r\n      });\r\n    case UserActionTypes.UserUpdated:\r\n      return adapter.updateOne(action.payload.partialUser, state);\r\n    case UserActionTypes.UserDeleted:\r\n      return adapter.removeOne(action.payload.id, state);\r\n    case UserActionTypes.UsersPageCancelled:\r\n      return {\r\n        ...state, listLoading: false, lastQuery: new QueryParamsModel({})\r\n      };\r\n    case UserActionTypes.UsersPageLoaded: {\r\n      return adapter.addMany(action.payload.users, {\r\n        ...initialUsersState,\r\n        totalCount: action.payload.totalCount,\r\n        lastQuery: action.payload.page,\r\n        listLoading: false,\r\n        showInitWaitingMessage: false\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserState = createFeatureSelector<UsersState>('users');\r\n\r\nexport const {\r\n  selectAll,\r\n  selectEntities,\r\n  selectIds,\r\n  selectTotal\r\n} = adapter.getSelectors();\r\n"]}